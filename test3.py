#!/usr/bin/env python
# -*- coding: utf-8 -*-
# ----------------------------------------------------------------------------------------------------------------------
# @Time    : 2023/11/23 18:59
# @Author  : huangfujue
# @File    : test3.py
# @Date    : 2023/11/23 
"""
模块说明
"""
# ----------------------------------------------------------------------------------------------------------------------
import os
import datetime
import json
import sxtwl

from kivy.lang import Builder
from kivy.app import App
from kivy.graphics import  Color, Line
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.filechooser import FileChooserIconView
from kivy.uix.popup import Popup
from kivy.uix.textinput import TextInput
from kivy.uix.button import Button, Label
from kivy.uix.checkbox import CheckBox
from kivy.config import Config

def set_font(*objs):
    for obj in objs:
        obj.font_name = "./fount.ttf"
        obj.color = (0, 0, 0, 1)
        obj.font_size = 16
        obj.bold = True

chang_sheng_shi_er_xing_biao = {
    "水二局": {
        "阳男": {
            "长生": "申",
            "沐浴": "酉",
            "冠带": "戌",
            "临官": "亥",
            "帝旺": "子",
            "衰": "丑",
            "病": "寅",
            "死": "卯",
            "墓": "辰",
            "绝": "巳",
            "胎": "午",
            "养": "未"},
        "阴男": {
            "长生": "申",
            "沐浴": "未",
            "冠带": "午",
            "临官": "巳",
            "帝旺": "辰",
            "衰": "卯",
            "病": "寅",
            "死": "丑",
            "墓": "子",
            "绝": "亥",
            "胎": "戌",
            "养": "酉"},
        "阴女": {
            "长生": "申",
            "沐浴": "酉",
            "冠带": "戌",
            "临官": "亥",
            "帝旺": "子",
            "衰": "丑",
            "病": "寅",
            "死": "卯",
            "墓": "辰",
            "绝": "巳",
            "胎": "午",
            "养": "未"},
        "阳女": {
            "长生": "申",
            "沐浴": "未",
            "冠带": "午",
            "临官": "巳",
            "帝旺": "辰",
            "衰": "卯",
            "病": "寅",
            "死": "丑",
            "墓": "子",
            "绝": "亥",
            "胎": "戌",
            "养": "酉"},
    },
    "木三局": {
        "阳男": {
            "长生": "亥",
            "沐浴": "子",
            "冠带": "丑",
            "临官": "寅",
            "帝旺": "卯",
            "衰": "辰",
            "病": "巳",
            "死": "午",
            "墓": "未",
            "绝": "申",
            "胎": "酉",
            "养": "戌"},
        "阴男": {
            "长生": "亥",
            "沐浴": "戌",
            "冠带": "酉",
            "临官": "申",
            "帝旺": "未",
            "衰": "午",
            "病": "巳",
            "死": "辰",
            "墓": "卯",
            "绝": "寅",
            "胎": "丑",
            "养": "子"},
        "阴女": {
            "长生": "亥",
            "沐浴": "子",
            "冠带": "丑",
            "临官": "寅",
            "帝旺": "卯",
            "衰": "辰",
            "病": "巳",
            "死": "午",
            "墓": "未",
            "绝": "申",
            "胎": "酉",
            "养": "戌"},
        "阳女": {
            "长生": "亥",
            "沐浴": "戌",
            "冠带": "酉",
            "临官": "申",
            "帝旺": "未",
            "衰": "午",
            "病": "巳",
            "死": "辰",
            "墓": "卯",
            "绝": "寅",
            "胎": "丑",
            "养": "子"},
    },
    "金四局": {
        "阳男": {
            "长生": "巳",
            "沐浴": "午",
            "冠带": "未",
            "临官": "申",
            "帝旺": "酉",
            "衰": "戌",
            "病": "亥",
            "死": "子",
            "墓": "丑",
            "绝": "寅",
            "胎": "卯",
            "养": "辰"},
        "阴男": {
            "长生": "巳",
            "沐浴": "辰",
            "冠带": "卯",
            "临官": "寅",
            "帝旺": "丑",
            "衰": "子",
            "病": "亥",
            "死": "戌",
            "墓": "酉",
            "绝": "申",
            "胎": "未",
            "养": "午"},
        "阴女": {
            "长生": "巳",
            "沐浴": "午",
            "冠带": "未",
            "临官": "申",
            "帝旺": "酉",
            "衰": "戌",
            "病": "亥",
            "死": "子",
            "墓": "丑",
            "绝": "寅",
            "胎": "卯",
            "养": "辰"},
        "阳女": {
            "长生": "巳",
            "沐浴": "辰",
            "冠带": "卯",
            "临官": "寅",
            "帝旺": "丑",
            "衰": "子",
            "病": "亥",
            "死": "戌",
            "墓": "酉",
            "绝": "申",
            "胎": "未",
            "养": "午"},
    },
    "土五局": {
        "阳男": {
            "长生": "申",
            "沐浴": "酉",
            "冠带": "戌",
            "临官": "亥",
            "帝旺": "子",
            "衰": "丑",
            "病": "寅",
            "死": "卯",
            "墓": "辰",
            "绝": "巳",
            "胎": "午",
            "养": "未"},
        "阴男": {
            "长生": "申",
            "沐浴": "未",
            "冠带": "午",
            "临官": "巳",
            "帝旺": "辰",
            "衰": "卯",
            "病": "寅",
            "死": "丑",
            "墓": "子",
            "绝": "亥",
            "胎": "戌",
            "养": "酉"},
        "阴女": {
            "长生": "申",
            "沐浴": "酉",
            "冠带": "戌",
            "临官": "亥",
            "帝旺": "子",
            "衰": "丑",
            "病": "寅",
            "死": "卯",
            "墓": "辰",
            "绝": "巳",
            "胎": "午",
            "养": "未"},
        "阳女": {
            "长生": "申",
            "沐浴": "未",
            "冠带": "午",
            "临官": "巳",
            "帝旺": "辰",
            "衰": "卯",
            "病": "寅",
            "死": "丑",
            "墓": "子",
            "绝": "亥",
            "胎": "戌",
            "养": "酉"}
    },
    "火六局": {
        "阳男": {
            "长生": "寅",
            "沐浴": "卯",
            "冠带": "辰",
            "临官": "巳",
            "帝旺": "午",
            "衰": "未",
            "病": "申",
            "死": "酉",
            "墓": "戌",
            "绝": "亥",
            "胎": "子",
            "养": "丑"},
        "阴男": {
            "长生": "寅",
            "沐浴": "丑",
            "冠带": "子",
            "临官": "亥",
            "帝旺": "戌",
            "衰": "酉",
            "病": "申",
            "死": "未",
            "墓": "午",
            "绝": "巳",
            "胎": "辰",
            "养": "卯"},
        "阴女": {
            "长生": "寅",
            "沐浴": "卯",
            "冠带": "辰",
            "临官": "巳",
            "帝旺": "午",
            "衰": "未",
            "病": "申",
            "死": "酉",
            "墓": "戌",
            "绝": "亥",
            "胎": "子",
            "养": "丑"},
        "阳女": {
            "长生": "寅",
            "沐浴": "丑",
            "冠带": "子",
            "临官": "亥",
            "帝旺": "戌",
            "衰": "酉",
            "病": "申",
            "死": "未",
            "墓": "午",
            "绝": "巳",
            "胎": "辰",
            "养": "卯"}
    }
}

zi_wei_biao = {
    1: {
        "水二局": "丑",
        "木三局": "辰",
        "金四局": "亥",
        "土五局": "午",
        "火六局": "酉"},
    2: {
        "水二局": "寅",
        "木三局": "丑",
        "金四局": "辰",
        "土五局": "亥",
        "火六局": "午"},
    3: {
        "水二局": "寅",
        "木三局": "寅",
        "金四局": "丑",
        "土五局": "辰",
        "火六局": "亥"},
    4: {
        "水二局": "卯",
        "木三局": "巳",
        "金四局": "寅",
        "土五局": "丑",
        "火六局": "辰"},
    5: {
        "水二局": "卯",
        "木三局": "寅",
        "金四局": "子",
        "土五局": "寅",
        "火六局": "丑"},
    6: {
        "水二局": "辰",
        "木三局": "卯",
        "金四局": "巳",
        "土五局": "未",
        "火六局": "寅"},
    7: {
        "水二局": "辰",
        "木三局": "午",
        "金四局": "寅",
        "土五局": "子",
        "火六局": "戌"},
    8: {
        "水二局": "巳",
        "木三局": "卯",
        "金四局": "卯",
        "土五局": "巳",
        "火六局": "未"},
    9: {
        "水二局": "巳",
        "木三局": "辰",
        "金四局": "丑",
        "土五局": "寅",
        "火六局": "子"},
    10: {
        "水二局": "午",
        "木三局": "未",
        "金四局": "午",
        "土五局": "卯",
        "火六局": "巳"},
    11: {
        "水二局": "午",
        "木三局": "辰",
        "金四局": "卯",
        "土五局": "申",
        "火六局": "寅"},
    12: {
        "水二局": "未",
        "木三局": "巳",
        "金四局": "辰",
        "土五局": "丑",
        "火六局": "卯"},
    13: {
        "水二局": "未",
        "木三局": "申",
        "金四局": "寅",
        "土五局": "午",
        "火六局": "亥"},
    14: {
        "水二局": "申",
        "木三局": "巳",
        "金四局": "未",
        "土五局": "卯",
        "火六局": "申"},
    15: {
        "水二局": "申",
        "木三局": "午",
        "金四局": "辰",
        "土五局": "辰",
        "火六局": "丑"},
    16: {
        "水二局": "酉",
        "木三局": "酉",
        "金四局": "巳",
        "土五局": "酉",
        "火六局": "午"},
    17: {
        "水二局": "酉",
        "木三局": "午",
        "金四局": "卯",
        "土五局": "寅",
        "火六局": "卯"},
    18: {
        "水二局": "戌",
        "木三局": "未",
        "金四局": "申",
        "土五局": "未",
        "火六局": "辰"},
    19: {
        "水二局": "戌",
        "木三局": "戌",
        "金四局": "巳",
        "土五局": "辰",
        "火六局": "子"},
    20: {
        "水二局": "亥",
        "木三局": "未",
        "金四局": "午",
        "土五局": "巳",
        "火六局": "酉"},
    21: {
        "水二局": "亥",
        "木三局": "申",
        "金四局": "辰",
        "土五局": "戌",
        "火六局": "寅"},
    22: {
        "水二局": "子",
        "木三局": "亥",
        "金四局": "酉",
        "土五局": "卯",
        "火六局": "未"},
    23: {
        "水二局": "子",
        "木三局": "申",
        "金四局": "午",
        "土五局": "申",
        "火六局": "辰"},
    24: {
        "水二局": "丑",
        "木三局": "酉",
        "金四局": "未",
        "土五局": "巳",
        "火六局": "巳"},
    25: {
        "水二局": "丑",
        "木三局": "子",
        "金四局": "巳",
        "土五局": "午",
        "火六局": "丑"},
    26: {
        "水二局": "寅",
        "木三局": "酉",
        "金四局": "戌",
        "土五局": "亥",
        "火六局": "戌"},
    27: {
        "水二局": "寅",
        "木三局": "戌",
        "金四局": "未",
        "土五局": "辰",
        "火六局": "卯"},
    28: {
        "水二局": "卯",
        "木三局": "丑",
        "金四局": "申",
        "土五局": "酉",
        "火六局": "申"},
    29: {
        "水二局": "卯",
        "木三局": "戌",
        "金四局": "午",
        "土五局": "午",
        "火六局": "巳"},
    30: {
        "水二局": "辰",
        "木三局": "亥",
        "金四局": "亥",
        "土五局": "未",
        "火六局": "午"},
}

liang_du_biao = {
    "子": {
        "天机": "庙",
        "天府": "庙",
        "太阴": "庙",
        "天相": "庙",
        "天梁": "庙",
        "破军": "庙",
        "禄存": "庙",
        "武曲": "旺",
        "天同": "旺",
        "贪狼": "旺",
        "巨门": "旺",
        "七杀": "旺",
        "文昌": "得",
        "文曲": "得",
        "紫薇": "平",
        "廉贞": "平",
        "太阳": "陷",
        "擎羊": "陷",
        "火星": "陷",
        "铃星": "陷",
    },
    "丑": {
        "紫薇": "庙",
        "武曲": "庙",
        "天府": "庙",
        "太阴": "庙",
        "贪狼": "庙",
        "天相": "庙",
        "七杀": "庙",
        "文昌": "庙",
        "文曲": "庙",
        "擎羊": "庙",
        "陀罗": "庙",
        "天梁": "旺",
        "破军": "旺",
        "火星": "得",
        "铃星": "得",
        "廉贞": "利",
        "太阳": "不",
        "天同": "不",
        "巨门": "不",
        "天机": "陷",
    },
    "寅": {
        "廉贞": "庙",
        "天府": "庙",
        "巨门": "庙",
        "天相": "庙",
        "天梁": "庙",
        "七杀": "庙",
        "禄存": "庙",
        "火星": "庙",
        "铃星": "庙",
        "紫薇": "旺",
        "太阳": "旺",
        "太阴": "旺",
        "天机": "得",
        "武曲": "得",
        "破军": "得",
        "天同": "利",
        "贪狼": "平",
        "文曲": "平",
        "文昌": "陷",
        "陀罗": "陷",
    },
    "卯": {
        "太阳": "庙",
        "巨门": "庙",
        "天梁": "庙",
        "禄存": "庙",
        "紫薇": "旺",
        "天机": "旺",
        "七杀": "旺",
        "文曲": "旺",
        "天府": "得",
        "武曲": "利",
        "贪狼": "利",
        "文昌": "利",
        "火星": "利",
        "铃星": "利",
        "天同": "平",
        "廉贞": "平",
        "太阴": "陷",
        "天相": "陷",
        "破军": "陷",
        "擎羊": "陷",
    },
    "辰": {
        "武曲": "庙",
        "天府": "庙",
        "贪狼": "庙",
        "天梁": "庙",
        "七杀": "庙",
        "擎羊": "庙",
        "陀罗": "庙",
        "太阳": "旺",
        "破军": "旺",
        "紫薇": "得",
        "天相": "得",
        "文昌": "得",
        "文曲": "得",
        "天机": "利",
        "廉贞": "利",
        "天同": "平",
        "太阴": "陷",
        "巨门": "陷",
        "火星": "陷",
        "铃星": "陷",
    },
    "巳": {
        "天同": "庙",
        "文昌": "庙",
        "文曲": "庙",
        "禄存": "庙",
        "紫薇": "旺",
        "太阳": "旺",
        "巨门": "旺",
        "天府": "得",
        "天相": "得",
        "火星": "得",
        "铃星": "得",
        "天机": "平",
        "武曲": "平",
        "七杀": "平",
        "破军": "平",
        "廉贞": "陷",
        "太阴": "陷",
        "贪狼": "陷",
        "天梁": "陷",
        "陀罗": "陷",
    },
    "午": {
        "紫薇": "庙",
        "天机": "庙",
        "天相": "庙",
        "天梁": "庙",
        "破军": "庙",
        "禄存": "庙",
        "火星": "庙",
        "铃星": "庙",
        "太阳": "旺",
        "武曲": "旺",
        "天府": "旺",
        "贪狼": "旺",
        "巨门": "旺",
        "七杀": "旺",
        "廉贞": "平",
        "太阴": "不",
        "天同": "陷",
        "文昌": "陷",
        "文曲": "陷",
        "擎羊": "陷",
    },
    "未": {
        "紫薇": "庙",
        "武曲": "庙",
        "天府": "庙",
        "贪狼": "庙",
        "七杀": "庙",
        "擎羊": "庙",
        "陀罗": "庙",
        "天梁": "旺",
        "破军": "旺",
        "文曲": "旺",
        "太阳": "得",
        "天相": "得",
        "廉贞": "利",
        "文昌": "利",
        "火星": "利",
        "铃星": "利",
        "天同": "不",
        "太阴": "不",
        "巨门": "不",
        "天机": "陷",
    },
    "申": {
        "廉贞": "庙",
        "巨门": "庙",
        "天相": "庙",
        "七杀": "庙",
        "禄存": "庙",
        "紫薇": "旺",
        "天同": "旺",
        "天机": "得",
        "太阳": "得",
        "武曲": "得",
        "天府": "得",
        "破军": "得",
        "文昌": "得",
        "文曲": "得",
        "太阴": "利",
        "贪狼": "平",
        "天梁": "陷",
        "陀罗": "陷",
        "火星": "陷",
        "铃星": "陷",
    },
    "酉": {
        "巨门": "庙",
        "文昌": "庙",
        "文曲": "庙",
        "禄存": "庙",
        "紫薇": "旺",
        "天机": "旺",
        "天府": "旺",
        "七杀": "旺",
        "天梁": "得",
        "火星": "得",
        "铃星": "得",
        "武曲": "利",
        "贪狼": "利",
        "太阳": "平",
        "天同": "平",
        "廉贞": "平",
        "天相": "陷",
        "破军": "陷",
        "擎羊": "陷",
    },
    "戌": {
        "武曲": "庙",
        "天府": "庙",
        "贪狼": "庙",
        "天梁": "庙",
        "七杀": "庙",
        "擎羊": "庙",
        "陀罗": "庙",
        "火星": "庙",
        "铃星": "庙",
        "太阴": "旺",
        "破军": "旺",
        "紫薇": "得",
        "天相": "得",
        "天机": "利",
        "廉贞": "利",
        "天同": "平",
        "太阳": "不",
        "巨门": "陷",
        "文昌": "陷",
        "文曲": "陷",
    },
    "亥": {
        "天同": "庙",
        "太阴": "庙",
        "禄存": "庙",
        "紫薇": "旺",
        "巨门": "旺",
        "文曲": "旺",
        "天府": "得",
        "天相": "得",
        "文昌": "利",
        "火星": "利",
        "铃星": "利",
        "天机": "平",
        "武曲": "平",
        "七杀": "平",
        "破军": "平",
        "太阳": "陷",
        "廉贞": "陷",
        "贪狼": "陷",
        "天梁": "陷",
        "陀罗": "陷",
    },
}

# 根据年干确幸星耀位置
nian_gan_xing_biao = {
    "甲": {
        "禄存": "寅",
        "擎羊": "卯",
        "陀罗": "丑",
        "天魁": "丑",
        "天钺": "未",
        "天官": "未",
        "天福": "酉",
        "天厨": "巳",
    },
    "乙": {
        "禄存": "卯",
        "擎羊": "辰",
        "陀罗": "寅",
        "天魁": "子",
        "天钺": "申",
        "天官": "辰",
        "天福": "申",
        "天厨": "午",
    },
    "丙": {
        "禄存": "巳",
        "擎羊": "午",
        "陀罗": "辰",
        "天魁": "亥",
        "天钺": "酉",
        "天官": "巳",
        "天福": "子",
        "天厨": "子",
    },
    "丁": {
        "禄存": "午",
        "擎羊": "未",
        "陀罗": "巳",
        "天魁": "亥",
        "天钺": "酉",
        "天官": "寅",
        "天福": "亥",
        "天厨": "巳",
    },
    "戊": {
        "禄存": "巳",
        "擎羊": "午",
        "陀罗": "辰",
        "天魁": "丑",
        "天钺": "未",
        "天官": "卯",
        "天福": "卯",
        "天厨": "午",
    },
    "己": {
        "禄存": "午",
        "擎羊": "未",
        "陀罗": "巳",
        "天魁": "子",
        "天钺": "申",
        "天官": "酉",
        "天福": "寅",
        "天厨": "申",
    },
    "庚": {
        "禄存": "申",
        "擎羊": "酉",
        "陀罗": "未",
        "天魁": "丑",
        "天钺": "未",
        "天官": "亥",
        "天福": "午",
        "天厨": "寅",
    },
    "辛": {
        "禄存": "酉",
        "擎羊": "戌",
        "陀罗": "申",
        "天魁": "午",
        "天钺": "寅",
        "天官": "酉",
        "天福": "巳",
        "天厨": "午",
    },
    "壬": {
        "禄存": "亥",
        "擎羊": "子",
        "陀罗": "戌",
        "天魁": "卯",
        "天钺": "巳",
        "天官": "戌",
        "天福": "午",
        "天厨": "酉",
    },
    "葵": {
        "禄存": "子",
        "擎羊": "丑",
        "陀罗": "亥",
        "天魁": "卯",
        "天钺": "巳",
        "天官": "午",
        "天福": "巳",
        "天厨": "亥",
    },
}

# 根据年干确定四化星是什么
si_hua_xing_biao = {
    "甲": {
        "化禄": "廉贞",
        "化权": "破军",
        "化科": "武曲",
        "化忌": "太阳",
    },
    "乙": {
        "化禄": "天机",
        "化权": "天梁",
        "化科": "紫微",
        "化忌": "太阴",
    },
    "丙": {
        "化禄": "天同",
        "化权": "天机",
        "化科": "文昌",
        "化忌": "廉贞",
    },
    "丁": {
        "化禄": "太阴",
        "化权": "天同",
        "化科": "天机",
        "化忌": "巨门",
    },
    "戊": {
        "化禄": "贪狼",
        "化权": "太阴",
        "化科": "右弼",
        "化忌": "天机",
    },
    "己": {
        "化禄": "武曲",
        "化权": "贪狼",
        "化科": "天梁",
        "化忌": "文曲",
    },
    "庚": {
        "化禄": "太阳",
        "化权": "武曲",
        "化科": "太阴",
        "化忌": "天同",
    },
    "辛": {
        "化禄": "巨门",
        "化权": "太阳",
        "化科": "文曲",
        "化忌": "文昌",
    },
    "壬": {
        "化禄": "天梁",
        "化权": "紫微",
        "化科": "左辅",
        "化忌": "武曲",
    },
    "葵": {
        "化禄": "破军",
        "化权": "巨门",
        "化科": "太阴",
        "化忌": "贪狼",
    },
}

# 根据年支确定的星耀
nian_zhi_xing_biao = {
    "子": {
        "天马": "寅",
        "解神": "戌",
        "天哭": "午",
        "天虚": "午",
        "龙池": "辰",
        "凤阁": "戌",
        "红鸾": "卯",
        "天喜": "酉",
        "孤辰": "寅",
        "寡宿": "戌",
        "蜚廉": "申",
        "破碎": "巳",
        "天空": "丑",
        "月德": "巳"},
    "丑": {
        "天马": "亥",
        "解神": "酉",
        "天哭": "巳",
        "天虚": "未",
        "龙池": "巳",
        "凤阁": "酉",
        "红鸾": "寅",
        "天喜": "申",
        "孤辰": "寅",
        "寡宿": "戌",
        "蜚廉": "酉",
        "破碎": "丑",
        "天空": "寅",
        "月德": "午"},
    "寅": {
        "天马": "申",
        "解神": "申",
        "天哭": "辰",
        "天虚": "申",
        "龙池": "午",
        "凤阁": "申",
        "红鸾": "丑",
        "天喜": "未",
        "孤辰": "巳",
        "寡宿": "丑",
        "蜚廉": "戌",
        "破碎": "酉",
        "天空": "卯",
        "月德": "未"},
    "卯": {
        "天马": "巳",
        "解神": "未",
        "天哭": "卯",
        "天虚": "酉",
        "龙池": "未",
        "凤阁": "未",
        "红鸾": "子",
        "天喜": "午",
        "孤辰": "巳",
        "寡宿": "丑",
        "蜚廉": "巳",
        "破碎": "巳",
        "天空": "辰",
        "月德": "申"},
    "辰": {
        "天马": "寅",
        "解神": "午",
        "天哭": "寅",
        "天虚": "戌",
        "龙池": "申",
        "凤阁": "午",
        "红鸾": "亥",
        "天喜": "巳",
        "孤辰": "巳",
        "寡宿": "丑",
        "蜚廉": "午",
        "破碎": "丑",
        "天空": "巳",
        "月德": "酉"},
    "巳": {
        "天马": "亥",
        "解神": "巳",
        "天哭": "丑",
        "天虚": "亥",
        "龙池": "酉",
        "凤阁": "巳",
        "红鸾": "戌",
        "天喜": "辰",
        "孤辰": "申",
        "寡宿": "辰",
        "蜚廉": "未",
        "破碎": "酉",
        "天空": "午",
        "月德": "戌"},
    "午": {
        "天马": "申",
        "解神": "辰",
        "天哭": "子",
        "天虚": "子",
        "龙池": "戌",
        "凤阁": "辰",
        "红鸾": "酉",
        "天喜": "卯",
        "孤辰": "申",
        "寡宿": "辰",
        "蜚廉": "寅",
        "破碎": "巳",
        "天空": "未",
        "月德": "亥"},
    "未": {
        "天马": "巳",
        "解神": "卯",
        "天哭": "亥",
        "天虚": "丑",
        "龙池": "亥",
        "凤阁": "卯",
        "红鸾": "申",
        "天喜": "寅",
        "孤辰": "申",
        "寡宿": "辰",
        "蜚廉": "卯",
        "破碎": "丑",
        "天空": "申",
        "月德": "子"},
    "申": {
        "天马": "寅",
        "解神": "寅",
        "天哭": "戌",
        "天虚": "寅",
        "龙池": "子",
        "凤阁": "寅",
        "红鸾": "未",
        "天喜": "丑",
        "孤辰": "亥",
        "寡宿": "未",
        "蜚廉": "辰",
        "破碎": "酉",
        "天空": "酉",
        "月德": "丑"},
    "酉": {
        "天马": "亥",
        "解神": "丑",
        "天哭": "酉",
        "天虚": "卯",
        "龙池": "丑",
        "凤阁": "丑",
        "红鸾": "午",
        "天喜": "子",
        "孤辰": "亥",
        "寡宿": "未",
        "蜚廉": "亥",
        "破碎": "巳",
        "天空": "戌",
        "月德": "寅"},
    "戌": {
        "天马": "申",
        "解神": "子",
        "天哭": "申",
        "天虚": "辰",
        "龙池": "寅",
        "凤阁": "子",
        "红鸾": "巳",
        "天喜": "亥",
        "孤辰": "亥",
        "寡宿": "未",
        "蜚廉": "子",
        "破碎": "丑",
        "天空": "亥",
        "月德": "卯"},
    "亥": {
        "天马": "巳",
        "解神": "亥",
        "天哭": "未",
        "天虚": "巳",
        "龙池": "卯",
        "凤阁": "亥",
        "红鸾": "辰",
        "天喜": "戌",
        "孤辰": "寅",
        "寡宿": "戌",
        "蜚廉": "丑",
        "破碎": "酉",
        "天空": "子",
        "月德": "辰"},
}

huo_ling_xing_biao = {
    "寅": {
        "火星": {
            "子": "丑",
            "丑": "寅",
            "寅": "卯",
            "卯": "辰",
            "辰": "巳",
            "巳": "午",
            "午": "未",
            "未": "申",
            "申": "酉",
            "酉": "戌",
            "戌": "亥",
            "亥": "子"},
        "铃星": {
            "子": "卯",
            "丑": "辰",
            "寅": "巳",
            "卯": "午",
            "辰": "未",
            "巳": "申",
            "午": "酉",
            "未": "戌",
            "申": "亥",
            "酉": "子",
            "戌": "丑",
            "亥": "寅"},
    },
    "午": {
        "火星": {
            "子": "丑",
            "丑": "寅",
            "寅": "卯",
            "卯": "辰",
            "辰": "巳",
            "巳": "午",
            "午": "未",
            "未": "申",
            "申": "酉",
            "酉": "戌",
            "戌": "亥",
            "亥": "子"},
        "铃星": {
            "子": "卯",
            "丑": "辰",
            "寅": "巳",
            "卯": "午",
            "辰": "未",
            "巳": "申",
            "午": "酉",
            "未": "戌",
            "申": "亥",
            "酉": "子",
            "戌": "丑",
            "亥": "寅"},
    },
    "戌": {
        "火星": {
            "子": "丑",
            "丑": "寅",
            "寅": "卯",
            "卯": "辰",
            "辰": "巳",
            "巳": "午",
            "午": "未",
            "未": "申",
            "申": "酉",
            "酉": "戌",
            "戌": "亥",
            "亥": "子"},
        "铃星": {
            "子": "卯",
            "丑": "辰",
            "寅": "巳",
            "卯": "午",
            "辰": "未",
            "巳": "申",
            "午": "酉",
            "未": "戌",
            "申": "亥",
            "酉": "子",
            "戌": "丑",
            "亥": "寅"},
    },
    "申": {
        "火星": {
            "子": "寅",
            "丑": "卯",
            "寅": "辰",
            "卯": "巳",
            "辰": "午",
            "巳": "未",
            "午": "申",
            "未": "酉",
            "申": "戌",
            "酉": "亥",
            "戌": "子",
            "亥": "丑"},
        "铃星": {
            "子": "戌",
            "丑": "亥",
            "寅": "子",
            "卯": "丑",
            "辰": "寅",
            "巳": "卯",
            "午": "辰",
            "未": "巳",
            "申": "午",
            "酉": "未",
            "戌": "申",
            "亥": "酉"},
    },
    "子": {
        "火星": {
            "子": "寅",
            "丑": "卯",
            "寅": "辰",
            "卯": "巳",
            "辰": "午",
            "巳": "未",
            "午": "申",
            "未": "酉",
            "申": "戌",
            "酉": "亥",
            "戌": "子",
            "亥": "丑"},
        "铃星": {
            "子": "戌",
            "丑": "亥",
            "寅": "子",
            "卯": "丑",
            "辰": "寅",
            "巳": "卯",
            "午": "辰",
            "未": "巳",
            "申": "午",
            "酉": "未",
            "戌": "申",
            "亥": "酉"},
    },
    "辰": {
        "火星": {
            "子": "寅",
            "丑": "卯",
            "寅": "辰",
            "卯": "巳",
            "辰": "午",
            "巳": "未",
            "午": "申",
            "未": "酉",
            "申": "戌",
            "酉": "亥",
            "戌": "子",
            "亥": "丑"},
        "铃星": {
            "子": "戌",
            "丑": "亥",
            "寅": "子",
            "卯": "丑",
            "辰": "寅",
            "巳": "卯",
            "午": "辰",
            "未": "巳",
            "申": "午",
            "酉": "未",
            "戌": "申",
            "亥": "酉"},
    },
    "巳": {
        "火星": {
            "子": "卯",
            "丑": "辰",
            "寅": "巳",
            "卯": "午",
            "辰": "未",
            "巳": "申",
            "午": "酉",
            "未": "戌",
            "申": "亥",
            "酉": "子",
            "戌": "丑",
            "亥": "寅"},
        "铃星": {
            "子": "戌",
            "丑": "亥",
            "寅": "子",
            "卯": "丑",
            "辰": "寅",
            "巳": "卯",
            "午": "辰",
            "未": "巳",
            "申": "午",
            "酉": "未",
            "戌": "申",
            "亥": "酉"},
    },
    "酉": {
        "火星": {
            "子": "卯",
            "丑": "辰",
            "寅": "巳",
            "卯": "午",
            "辰": "未",
            "巳": "申",
            "午": "酉",
            "未": "戌",
            "申": "亥",
            "酉": "子",
            "戌": "丑",
            "亥": "寅"},
        "铃星": {
            "子": "戌",
            "丑": "亥",
            "寅": "子",
            "卯": "丑",
            "辰": "寅",
            "巳": "卯",
            "午": "辰",
            "未": "巳",
            "申": "午",
            "酉": "未",
            "戌": "申",
            "亥": "酉"},
    },
    "丑": {
        "火星": {
            "子": "卯",
            "丑": "辰",
            "寅": "巳",
            "卯": "午",
            "辰": "未",
            "巳": "申",
            "午": "酉",
            "未": "戌",
            "申": "亥",
            "酉": "子",
            "戌": "丑",
            "亥": "寅"},
        "铃星": {
            "子": "戌",
            "丑": "亥",
            "寅": "子",
            "卯": "丑",
            "辰": "寅",
            "巳": "卯",
            "午": "辰",
            "未": "巳",
            "申": "午",
            "酉": "未",
            "戌": "申",
            "亥": "酉"},
    },
    "亥": {
        "火星": {
            "子": "酉",
            "丑": "戌",
            "寅": "亥",
            "卯": "子",
            "辰": "丑",
            "巳": "寅",
            "午": "卯",
            "未": "辰",
            "申": "巳",
            "酉": "午",
            "戌": "未",
            "亥": "申"},
        "铃星": {
            "子": "戌",
            "丑": "亥",
            "寅": "子",
            "卯": "丑",
            "辰": "寅",
            "巳": "卯",
            "午": "辰",
            "未": "巳",
            "申": "午",
            "酉": "未",
            "戌": "申",
            "亥": "酉"},
    },
    "卯": {
        "火星": {
            "子": "酉",
            "丑": "戌",
            "寅": "亥",
            "卯": "子",
            "辰": "丑",
            "巳": "寅",
            "午": "卯",
            "未": "辰",
            "申": "巳",
            "酉": "午",
            "戌": "未",
            "亥": "申"},
        "铃星": {
            "子": "戌",
            "丑": "亥",
            "寅": "子",
            "卯": "丑",
            "辰": "寅",
            "巳": "卯",
            "午": "辰",
            "未": "巳",
            "申": "午",
            "酉": "未",
            "戌": "申",
            "亥": "酉"},
    },
    "未": {
        "火星": {
            "子": "酉",
            "丑": "戌",
            "寅": "亥",
            "卯": "子",
            "辰": "丑",
            "巳": "寅",
            "午": "卯",
            "未": "辰",
            "申": "巳",
            "酉": "午",
            "戌": "未",
            "亥": "申"},
        "铃星": {
            "子": "戌",
            "丑": "亥",
            "寅": "子",
            "卯": "丑",
            "辰": "寅",
            "巳": "卯",
            "午": "辰",
            "未": "巳",
            "申": "午",
            "酉": "未",
            "戌": "申",
            "亥": "酉"},
    },
}

# 根据出生时辰确定的星耀
shi_chen_xing_biao = {
    "文昌": {
        "子": "戌",
        "丑": "酉",
        "寅": "申",
        "卯": "未",
        "辰": "午",
        "巳": "巳",
        "午": "辰",
        "未": "卯",
        "申": "寅",
        "酉": "丑",
        "戌": "子",
        "亥": "亥"
    },
    "文曲": {
        "子": "辰",
        "丑": "巳",
        "寅": "午",
        "卯": "未",
        "辰": "申",
        "巳": "酉",
        "午": "戌",
        "未": "亥",
        "申": "子",
        "酉": "丑",
        "戌": "寅",
        "亥": "卯"
    },
    "地劫": {
        "子": "亥",
        "丑": "子",
        "寅": "丑",
        "卯": "寅",
        "辰": "卯",
        "巳": "辰",
        "午": "巳",
        "未": "午",
        "申": "未",
        "酉": "申",
        "戌": "酉",
        "亥": "戌"
    },
    "地空": {
        "子": "亥",
        "丑": "戌",
        "寅": "酉",
        "卯": "申",
        "辰": "未",
        "巳": "午",
        "午": "巳",
        "未": "辰",
        "申": "卯",
        "酉": "寅",
        "戌": "丑",
        "亥": "子"
    },
    "台辅": {
        "子": "午",
        "丑": "未",
        "寅": "申",
        "卯": "酉",
        "辰": "戌",
        "巳": "亥",
        "午": "子",
        "未": "丑",
        "申": "寅",
        "酉": "卯",
        "戌": "辰",
        "亥": "巳"
    },
    "封诰": {
        "子": "寅",
        "丑": "卯",
        "寅": "辰",
        "卯": "巳",
        "辰": "午",
        "巳": "未",
        "午": "申",
        "未": "酉",
        "申": "戌",
        "酉": "亥",
        "戌": "子",
        "亥": "丑"
    }
}

yue_xing_biao = {
    1: {
        "左辅": "辰",
        "右弼": "戌",
        "天刑": "酉",
        "天姚": "丑",
        "天巫": "巳",
        "天月": "戌",
        "阴煞": "寅",
    },
    2: {
        "左辅": "巳",
        "右弼": "酉",
        "天刑": "戌",
        "天姚": "寅",
        "天巫": "申",
        "天月": "巳",
        "阴煞": "子",
    },
    3: {
        "左辅": "午",
        "右弼": "申",
        "天刑": "亥",
        "天姚": "卯",
        "天巫": "寅",
        "天月": "辰",
        "阴煞": "戌",
    },
    4: {
        "左辅": "未",
        "右弼": "未",
        "天刑": "子",
        "天姚": "辰",
        "天巫": "亥",
        "天月": "寅",
        "阴煞": "申",
    },
    5: {
        "左辅": "申",
        "右弼": "午",
        "天刑": "丑",
        "天姚": "巳",
        "天巫": "巳",
        "天月": "未",
        "阴煞": "午",
    },
    6: {
        "左辅": "酉",
        "右弼": "巳",
        "天刑": "寅",
        "天姚": "午",
        "天巫": "申",
        "天月": "卯",
        "阴煞": "辰",
    },
    7: {
        "左辅": "戌",
        "右弼": "辰",
        "天刑": "卯",
        "天姚": "未",
        "天巫": "寅",
        "天月": "亥",
        "阴煞": "寅",
    },
    8: {
        "左辅": "亥",
        "右弼": "卯",
        "天刑": "辰",
        "天姚": "申",
        "天巫": "亥",
        "天月": "未",
        "阴煞": "子",
    },
    9: {
        "左辅": "子",
        "右弼": "寅",
        "天刑": "巳",
        "天姚": "酉",
        "天巫": "巳",
        "天月": "寅",
        "阴煞": "戌",
    },
    10: {
        "左辅": "丑",
        "右弼": "丑",
        "天刑": "午",
        "天姚": "戌",
        "天巫": "申",
        "天月": "午",
        "阴煞": "申",
    },
    11: {
        "左辅": "寅",
        "右弼": "子",
        "天刑": "未",
        "天姚": "亥",
        "天巫": "寅",
        "天月": "戌",
        "阴煞": "午",
    },
    12: {
        "左辅": "卯",
        "右弼": "亥",
        "天刑": "申",
        "天姚": "子",
        "天巫": "亥",
        "天月": "寅",
        "阴煞": "辰",
    }
}

class FileChooserPopup(Popup):
    def __init__(self, title, fun=None, default_dir=None, **kwargs):

        super(FileChooserPopup, self).__init__(**kwargs)
        self.title = title
        self.fun = fun

        # self.size_hint = (0.98, 0.98)
        default_dir = "" if default_dir is None else default_dir
        layout = BoxLayout(orientation='vertical')
        btn_layout = BoxLayout()
        height = 0.2

        select_button = Button(text='打开', on_release=self.select_file, size_hint_x=0.18, size_hint_y=height)
        chanel_button = Button(text='取消', on_release=self.chanel, size_hint_x=0.18, size_hint_y=height)
        self.filechooser = FileChooserIconView(path=default_dir, dirselect=True, size_hint_y=0.9)

        set_font(select_button, chanel_button, self.filechooser)
        chanel_button.color = (1, 1, 1, 1)
        select_button.color = (1, 1, 1, 1)

        btn_layout.add_widget(chanel_button)
        btn_layout.add_widget(Label(size_hint_x=0.8, size_hint_y=height))
        btn_layout.add_widget(select_button)
        btn_layout.size_hint_y = height
        layout.add_widget(btn_layout)
        layout.add_widget(self.filechooser)
        self.add_widget(layout)

    def updae_tile(self, instance):
        pass

    def select_file(self, instance):
        if len(self.filechooser.selection) > 0:
            file = self.filechooser.selection[0]
            if os.path.isfile(file):
                self.dismiss()
                self.fun(file)

    def chanel(self, instance):
        self.dismiss()
        self.fun(None)


class Liu_Nian_Xing:
    def __init__(self, nian_zhi):
        self.__nian_zhi = nian_zhi
        # 安流年将前诸星表
        self.jiang_xing_biao = {
            "寅": {
                "将星": "午",
                "攀鞍": "未",
                "岁驿": "申",
                "息神": "酉",
                "华盖": "戌",
                "劫煞": "亥",
                "灾煞": "子",
                "天煞": "丑",
                "推背": "寅",
                "咸池": "卯",
                "月煞": "辰",
                "亡神": "巳",
            },
            "申": {
                "将星": "子",
                "攀鞍": "丑",
                "岁驿": "寅",
                "息神": "卯",
                "华盖": "辰",
                "劫煞": "巳",
                "灾煞": "午",
                "天煞": "未",
                "推背": "申",
                "咸池": "酉",
                "月煞": "戌",
                "亡神": "亥",
            },
            "巳": {
                "将星": "酉",
                "攀鞍": "戌",
                "岁驿": "亥",
                "息神": "子",
                "华盖": "丑",
                "劫煞": "寅",
                "灾煞": "卯",
                "天煞": "辰",
                "推背": "巳",
                "咸池": "午",
                "月煞": "未",
                "亡神": "申",
            },
            "亥": {
                "将星": "卯",
                "攀鞍": "辰",
                "岁驿": "巳",
                "息神": "午",
                "华盖": "未",
                "劫煞": "申",
                "灾煞": "酉",
                "天煞": "戌",
                "推背": "亥",
                "咸池": "子",
                "月煞": "丑",
                "亡神": "寅",
            },

            "午": {
                "将星": "午",
                "攀鞍": "未",
                "岁驿": "申",
                "息神": "酉",
                "华盖": "戌",
                "劫煞": "亥",
                "灾煞": "子",
                "天煞": "丑",
                "推背": "寅",
                "咸池": "卯",
                "月煞": "辰",
                "亡神": "巳",
            },
            "子": {
                "将星": "子",
                "攀鞍": "丑",
                "岁驿": "寅",
                "息神": "卯",
                "华盖": "辰",
                "劫煞": "巳",
                "灾煞": "午",
                "天煞": "未",
                "推背": "申",
                "咸池": "酉",
                "月煞": "戌",
                "亡神": "亥",
            },
            "酉": {
                "将星": "酉",
                "攀鞍": "戌",
                "岁驿": "亥",
                "息神": "子",
                "华盖": "丑",
                "劫煞": "寅",
                "灾煞": "卯",
                "天煞": "辰",
                "推背": "巳",
                "咸池": "午",
                "月煞": "未",
                "亡神": "申",
            },
            "卯": "",

            "戌": {
                "将星": "午",
                "攀鞍": "未",
                "岁驿": "申",
                "息神": "酉",
                "华盖": "戌",
                "劫煞": "亥",
                "灾煞": "子",
                "天煞": "丑",
                "推背": "寅",
                "咸池": "卯",
                "月煞": "辰",
                "亡神": "巳",
            },
            "辰": {
                "将星": "子",
                "攀鞍": "丑",
                "岁驿": "寅",
                "息神": "卯",
                "华盖": "辰",
                "劫煞": "巳",
                "灾煞": "午",
                "天煞": "未",
                "推背": "申",
                "咸池": "酉",
                "月煞": "戌",
                "亡神": "亥",
            },
            "丑": {
                "将星": "酉",
                "攀鞍": "戌",
                "岁驿": "亥",
                "息神": "子",
                "华盖": "丑",
                "劫煞": "寅",
                "灾煞": "卯",
                "天煞": "辰",
                "推背": "巳",
                "咸池": "午",
                "月煞": "未",
                "亡神": "申",
            },
            "未": {
                "将星": "卯",
                "攀鞍": "辰",
                "岁驿": "巳",
                "息神": "午",
                "华盖": "未",
                "劫煞": "申",
                "灾煞": "酉",
                "天煞": "戌",
                "推背": "亥",
                "咸池": "子",
                "月煞": "丑",
                "亡神": "寅",
            },
        }
        # 安流年岁前诸星表
        self.sui_jian_biao = {
            "子": {
                "岁建": "子",
                "晦气": "丑",
                "丧门": "寅",
                "贯索": "卯",
                "官府": "辰",
                "小耗": "巳",
                "大耗": "午",
                "龙德": "未",
                "白虎": "申",
                "天德": "酉",
                "吊客": "戌",
                "病符": "亥"},
            "丑": {
                "岁建": "丑",
                "晦气": "寅",
                "丧门": "卯",
                "贯索": "辰",
                "官府": "巳",
                "小耗": "午",
                "大耗": "未",
                "龙德": "申",
                "白虎": "酉",
                "天德": "戌",
                "吊客": "亥",
                "病符": "子"},
            "寅": {
                "岁建": "寅",
                "晦气": "卯",
                "丧门": "辰",
                "贯索": "巳",
                "官府": "午",
                "小耗": "未",
                "大耗": "申",
                "龙德": "酉",
                "白虎": "戌",
                "天德": "亥",
                "吊客": "子",
                "病符": "丑"},
            "卯": {
                "岁建": "卯",
                "晦气": "辰",
                "丧门": "巳",
                "贯索": "午",
                "官府": "未",
                "小耗": "申",
                "大耗": "酉",
                "龙德": "戌",
                "白虎": "亥",
                "天德": "子",
                "吊客": "丑",
                "病符": "寅"},
            "辰": {
                "岁建": "辰",
                "晦气": "巳",
                "丧门": "午",
                "贯索": "未",
                "官府": "申",
                "小耗": "酉",
                "大耗": "戌",
                "龙德": "亥",
                "白虎": "子",
                "天德": "丑",
                "吊客": "寅",
                "病符": "卯"},
            "巳": {
                "岁建": "巳",
                "晦气": "午",
                "丧门": "未",
                "贯索": "申",
                "官府": "酉",
                "小耗": "戌",
                "大耗": "亥",
                "龙德": "子",
                "白虎": "丑",
                "天德": "寅",
                "吊客": "卯",
                "病符": "辰"},
            "午": {
                "岁建": "午",
                "晦气": "未",
                "丧门": "申",
                "贯索": "酉",
                "官府": "戌",
                "小耗": "亥",
                "大耗": "子",
                "龙德": "丑",
                "白虎": "寅",
                "天德": "卯",
                "吊客": "辰",
                "病符": "巳"},
            "未": {
                "岁建": "未",
                "晦气": "申",
                "丧门": "酉",
                "贯索": "戌",
                "官府": "亥",
                "小耗": "子",
                "大耗": "丑",
                "龙德": "寅",
                "白虎": "卯",
                "天德": "辰",
                "吊客": "巳",
                "病符": "午"},
            "申": {
                "岁建": "申",
                "晦气": "酉",
                "丧门": "戌",
                "贯索": "亥",
                "官府": "子",
                "小耗": "丑",
                "大耗": "寅",
                "龙德": "卯",
                "白虎": "辰",
                "天德": "巳",
                "吊客": "午",
                "病符": "未"},
            "酉": {
                "岁建": "酉",
                "晦气": "戌",
                "丧门": "亥",
                "贯索": "子",
                "官府": "丑",
                "小耗": "寅",
                "大耗": "卯",
                "龙德": "辰",
                "白虎": "巳",
                "天德": "午",
                "吊客": "未",
                "病符": "申"},
            "戌": {
                "岁建": "戌",
                "晦气": "亥",
                "丧门": "子",
                "贯索": "丑",
                "官府": "寅",
                "小耗": "卯",
                "大耗": "辰",
                "龙德": "巳",
                "白虎": "午",
                "天德": "未",
                "吊客": "申",
                "病符": "酉"},
            "亥": {
                "岁建": "亥",
                "晦气": "子",
                "丧门": "丑",
                "贯索": "寅",
                "官府": "卯",
                "小耗": "辰",
                "大耗": "巳",
                "龙德": "午",
                "白虎": "未",
                "天德": "申",
                "吊客": "酉",
                "病符": "戌"},
        }

    def get_jiang_xing(self):
        return self.jiang_xing_biao.get(self.__nian_zhi)

    def get_sui_jian_biao(self):
        return self.sui_jian_biao.get(self.__nian_zhi)

class Star_Info:
    def __init__(self, level="甲", name="", dou_fen="", zhu_hua="", wuxing_list=[]):
        """
        :param level: 星辰等级("甲"-4)
        :param name: 名称
        :param dou_fen: 属于南北斗的信息，不属于是空字符串
        :param zhu_hua: 这个星辰主的是什么，化的是什么
        :param wuxing_list: 五行所属列表，允许空列表，但不要不传参
        """
        self.level = level
        self.name = name
        self.wuxing_list = wuxing_list
        self.dou_fen = dou_fen
        self.zhu_hua = zhu_hua


class Si_Hua_Xing(Star_Info):
    def __init__(self, level="甲", name="", dou_fen="", zhu_hua="", wuxing_list=[]):
        super().__init__(level, name, dou_fen, zhu_hua, wuxing_list)

    def __call__(self, *args, **kwargs):
        srar_name = args[0]
        self.belong_star = srar_name
        return self


dou_shu_stars = {
    "紫薇": Star_Info("甲", "紫薇", "南北", "尊", ["土"]),
    "天机": Star_Info("甲", "天机", "南三", "善", ["木"]),
    "太阳": Star_Info("甲", "太阳", "南北", "贵", ["火"]),
    "武曲": Star_Info("甲", "武曲", "北六", "财", ["金"]),
    "天同": Star_Info("甲", "天同", "南四", "福", ["水"]),
    "廉贞": Star_Info("甲", "廉贞", "北五", "囚", ["木", "火"]),
    "天府": Star_Info("甲", "天府", "南一", "贤能", ["土"]),
    "太阴": Star_Info("甲", "太阴", "南北", "富", ["水"]),
    "贪狼": Star_Info("甲", "贪狼", "北一", "桃花", ["水", "木"]),
    "巨门": Star_Info("甲", "巨门", "北二", "暗", ["水"]),
    "天相": Star_Info("甲", "天相", "南五", "印", ["水"]),
    "天梁": Star_Info("甲", "天梁", "南二", "阴", ["土"]),
    "七杀": Star_Info("甲", "七杀", "南六", "将星", ["火", "金"]),
    "破军": Star_Info("甲", "破军", "北七", "耗", ["水"]),
    "文昌": Star_Info("甲", "文昌", "南北", "科甲", ["金"]),
    "文曲": Star_Info("甲", "文曲", "北四", "科甲", ["水"]),
    "左辅": Star_Info("甲", "左辅", "南北", "助力", ["土"]),
    "右弼": Star_Info("甲", "右弼", "南北", "助力", ["水"]),

    "天魁": Star_Info("甲", "天魁", "    ", "阳贵", ["火"]),
    "天钺": Star_Info("甲", "天钺", "    ", "阴贵", ["火"]),
    "禄存": Star_Info("甲", "禄存", "北三", "爵禄", ["土"]),
    "擎羊": Star_Info("甲", "擎羊", "北助", "刑", ["火", "金"]),
    "陀罗": Star_Info("甲", "陀罗", "北助", "忌", ["金"]),
    "火星": Star_Info("甲", "火星", "南助", "杀", ["火"]),
    "铃星": Star_Info("甲", "铃星", "南助", "杀", ["火"]),
    "地劫": Star_Info("乙", "地劫", "    ", "多灾", ["火"]),
    "地空": Star_Info("乙", "地空", "    ", "失", ["火"]),
    "天马": Star_Info("乙", "天马", "    ", "主动", ["火"]),

    "化禄": Si_Hua_Xing("四化", "化禄", "    ", "财禄", ["土"]),
    "化权": Si_Hua_Xing("四化", "化权", "    ", "权势", ["木"]),
    "化科": Si_Hua_Xing("四化", "化科", "    ", "声名", ["水"]),
    "化忌": Si_Hua_Xing("四化", "化忌", "    ", "多咎", ["水"]),

    "台辅": Star_Info("乙", "台辅", "    ", "主贵", ["土"]),
    "封诰": Star_Info("乙", "封诰", "    ", "主贵", ["土"]),
    "天刑": Star_Info("乙", "天刑", "    ", "孤克", ["火"]),
    "天姚": Star_Info("乙", "天姚", "    ", "风流", ["水"]),

    "天巫": Star_Info("乙", "天巫", "    ", "升迁", []),
    "天月": Star_Info("乙", "天月", "    ", "主病", []),
    "阴煞": Star_Info("乙", "阴煞", "    ", "主有小人", []),
    "三台": Star_Info("乙", "三台", "    ", "主贵", ["土"]),
    "八座": Star_Info("乙", "八座", "    ", "主贵", ["土"]),
    "恩光": Star_Info("乙", "恩光", "    ", "主受殊恩", ["火"]),
    "天贵": Star_Info("乙", "天贵", "    ", "主贵", ["土"]),
    "天官": Star_Info("乙", "天官", "    ", "贵显", ["土"]),
    "天福": Star_Info("乙", "天福", "    ", "爵禄", ["土"]),
    "解神": Star_Info("乙", "解神", "    ", "解灾", []),
    "博士": Star_Info("丙", "博士", "    ", "聪明", ["水"]),
    "力士": Star_Info("丙", "力士", "    ", "权势", ["火"]),
    "青龙": Star_Info("丙", "青龙", "    ", "喜气", ["水"]),
    "小耗": Star_Info("丙", "小耗", "    ", "耗财、小败", ["火"]),
    "将军": Star_Info("丙", "将军", "    ", "威猛", ["木"]),
    "奏书": Star_Info("丙", "奏书", "    ", "福禄", ["金"]),
    "飞廉": Star_Info("丙", "飞廉", "    ", "孤克", ["火"]),
    "喜神": Star_Info("丙", "喜神", "    ", "吉庆", ["火"]),

    "病符": Star_Info("丙", "病符", "    ", "主灾病", ["水"]),
    "大耗": Star_Info("丙", "大耗", "    ", "退祖、破财、大败", ["火"]),
    "伏兵": Star_Info("丙", "伏兵", "    ", "口舌、是非", ["火"]),
    "官府": Star_Info("丙", "官府", "    ", "口舌、刑仗", ["火"]),
    "天哭": Star_Info("乙", "天哭", "    ", "主忧伤", ["金"]),
    "天虚": Star_Info("乙", "天虚", "    ", "主忧伤", ["土"]),
    "龙池": Star_Info("乙", "龙池", "    ", "主科甲", ["水"]),
    "凤阁": Star_Info("乙", "凤阁", "    ", "主科甲", ["土"]),
    "红鸾": Star_Info("乙", "红鸾", "    ", "主婚姻", ["水"]),
    "天喜": Star_Info("乙", "天喜", "    ", "主喜庆", ["水"]),
    "孤辰": Star_Info("乙", "孤辰", "    ", "主孤", ["火"]),
    "寡宿": Star_Info("乙", "寡宿", "    ", "主寡", ["火"]),
    "蜚廉": Star_Info("乙", "蜚廉", "    ", "主孤克", ["火"]),
    "破碎": Star_Info("乙", "破碎", "    ", "主损耗", ["火"]),
    "天才": Star_Info("乙", "天才", "    ", "主才能", ["木"]),

    "天寿": Star_Info("乙", "天寿", "    ", "主有寿", ["土"]),
    "截路": Star_Info("丙", "截路", "    ", "诸空", []),
    "旬空": Star_Info("丙", "旬空", "    ", "诸空", []),

    "天伤": Star_Info("丙", "天伤", "    ", "虚耗", ["水"]),
    "天使": Star_Info("丙", "天使", "    ", "灾祸", ["水"]),
    "长生": Star_Info("丙", "长生", "    ", "主生发", []),
    "沐浴": Star_Info("丙", "沐浴", "    ", "主桃花", []),
    "冠带": Star_Info("丙", "冠带", "    ", "主喜庆", []),
    "临官": Star_Info("丙", "临官", "    ", "主喜庆", []),
    "帝旺": Star_Info("丙", "帝旺", "    ", "旺壮", []),
    "衰": Star_Info("丙", "衰", "    ", "颓败", []),
    "病": Star_Info("丙", "病", "    ", "疾病", []),
    "死": Star_Info("丙", "死", "    ", "丧亡", []),
    "墓": Star_Info("丙", "墓", "    ", "钦藏", []),
    "绝": Star_Info("丙", "绝", "    ", "绝灭", []),
    "胎": Star_Info("丙", "胎", "    ", "主喜", []),
    "养": Star_Info("丙", "养", "    ", "主福", []),
    # 之后德这些看不到等级德星统统按第四等级处理
    "将星": Star_Info("丁", "将星", "    ", "化凶为吉", []),
    "攀鞍": Star_Info("丁", "攀鞍", "    ", "利功名", []),
    "岁驿": Star_Info("丁", "岁驿", "    ", "利迁动", []),
    "息神": Star_Info("丁", "息神", "    ", "消沉", []),

    "华盖": Star_Info("丁", "华盖", "    ", "孤高", ["木"]),
    "劫煞": Star_Info("丁", "劫煞", "    ", "窍盗", ["火"]),
    "灾煞": Star_Info("丁", "灾煞", "    ", "灾患", []),
    "天煞": Star_Info("丁", "天煞", "    ", "克父、克夫", []),
    "指背": Star_Info("丁", "指背", "    ", "诽谤", []),
    "咸池": Star_Info("丁", "咸池", "    ", "桃花", []),
    "月煞": Star_Info("丁", "月煞", "    ", "克母、克妻", []),
    "亡神": Star_Info("丁", "亡神", "    ", "耗败", []),
    "岁建": Star_Info("丁", "岁建", "    ", "一年休咎", ["火"]),
    "晦气": Star_Info("丁", "晦气", "    ", "主咎", []),
    "丧门": Star_Info("丁", "丧门", "    ", "丧亡", ["木"]),
    "贯索": Star_Info("丁", "贯索", "    ", "狱灾", []),
    "官符": Star_Info("丁", "官符", "    ", "主讼", ["火"]),
    # "小耗": Star_Inf"丁","("小耗", "    ", "小失", ["火"]),    # 重复了，内容在上补充
    # "大耗": Star_Inf"丁","("大耗", "    ", "大败", ["火"]),    # 重复了，内容在上补充
    "龙德": Star_Info("丁", "龙德", "    ", "化凶为吉", []),
    "白虎": Star_Info("丁", "白虎", "    ", "诸凶", ["金"]),
    "天德": Star_Info("丁", "天德", "    ", "化凶为吉", []),
    "串客": Star_Info("丁", "串客", "    ", "孝服", ["火"]),
    # "病符": Star_Info("病符", "    ", "疾厄", []), # 重复了
    # 以下为表里缺少的星
    "天厨": Star_Info("乙", "天厨", "    ", "缺少天厨星", []),
    "月德": Star_Info("乙", "月德", "    ", "缺少月德星", ["木"]),
    "天空": Star_Info("乙", "天空", "    ", "缺少天空星", []),
    "空亡": Star_Info("丙", "空亡", "    ", "缺少空亡星", []),
    "推背": Star_Info("丁", "推背", "    ", "缺少推背星", []),
    "吊客": Star_Info("丁", "吊客", "    ", "缺少吊客星，按串客处理，主孝服", ["火"]),
}

class CalculateLocation:

    def __init__(self, start_location, day, star_name="八座"):
        """
        :param start_location:  基于哪个星耀计算，给出这个星耀所在的宫
        :param day: 出生日
        :param is_next: 是否是顺行，默认顺行
        """
        self.start_localction = start_location
        if day < 1 or day > 30:
            raise Exception("请给出初一到30的时间，而不是一个无法识别的东西，当前是{}".format(day))
        self.__day = day
        # 只有八座需要逆着算
        self.__is_next = False if star_name == "八座" else True
        self.__name = star_name
        iter = Di_Zhi_Iter(0)
        # 传入星耀所在位置作为开始位置
        iter.update(start_location)
        self.__geter = iter

    def calculate(self):
        """
        获取星耀位置
        :return:
        """
        for _ in range(1, self.__day):
            if self.__is_next:
                self.__geter.next()
            else:
                self.__geter.up()
        if self.__name == "恩光" or self.__name == "天贵":
            self.__geter.up()  # 这两个顺行并且后退一步，那就是往上呗

        return self.__geter.now()


"""
用来计算表示天寿星的位置的类，传入月份，时辰和年支
用来计算表示天才星和天寿星的位置
"""


class Tian_Cai_Tian_Show_xing:
    def __init__(self, yue, shi_zhi, nian_zhi):
        """
        根据月份，时辰和年支计算天才、天寿星位置

        :param yue:
        :param shi_zhi:表示时支
        :param nian_zhi:
        """
        ming_shen = Ming_Shen_Gong(yue, shi_zhi)
        self.shen_gong = ming_shen.shen

        self.yu_gong_iter = Yu_Gong(ming_shen.ming)  # 获取所有宫所在的位置
        self.__shi_zhi = shi_zhi
        self.__nian_zhi = nian_zhi
        self.__tian_cai_gong_biao = {
            "子": "命",
            "丑": "父母",
            "寅": "福德",
            "卯": "田宅",
            "辰": "事业",
            "巳": "友仆",
            "午": "迁移",
            "未": "疾厄",
            "申": "财帛",
            "酉": "子女",
            "戌": "夫妻",
            "亥": "兄弟"
        }

    def get_tian_cai_loaction(self):
        gong = self.__tian_cai_gong_biao.get(self.__nian_zhi)
        flag = True
        location = "子"
        for temp in di_zhi.values():
            yu_gong = self.yu_gong_iter.__getattribute__(temp)
            if yu_gong == gong:
                location = temp
                flag = False
                break
        if flag:
            raise Exception("为能找到天才星的位置，也许是参数错了，时辰是用1-12表示的")
        return location

    def get_tian_show_loaction(self):

        flag = True
        di_zhi_iter = Di_Zhi_Iter(-1)  # 从子开始

        for temp in di_zhi.values():

            if temp == self.shen_gong:
                flag = False
                break

            di_zhi_iter.next()

        if flag:
            raise Exception("未能找到天寿星的位置，也许是参数错了，时辰是用1-12表示的")
        return di_zhi_iter.now()


"""
用来表示截空位置
根据年干定下截空星在哪个位置，但是现在看不懂表格，
暂时先按这是两个星辰来看
"""


class Jie_Kong_Xing:
    def __init__(self, nian_gan):
        biao = {
            "甲": {
                "截路": "申",
                "空亡": "酉",
            },
            "乙": {
                "截路": "午",
                "空亡": "未",
            },
            "丙": {
                "截路": "辰",
                "空亡": "巳",
            },
            "丁": {
                "截路": "寅",
                "空亡": "卯",
            },
            "戊": {
                "截路": "子",
                "空亡": "丑",
            },
            "己": {
                "截路": "申",
                "空亡": "酉",
            },
            "庚": {
                "截路": "午",
                "空亡": "未",
            },
            "辛": {
                "截路": "辰",
                "空亡": "巳",
            },
            "壬": {
                "截路": "寅",
                "空亡": "卯",
            },
            "葵": {
                "截路": "子",
                "空亡": "丑",
            },
        }
        self.__name = "截空"
        self.__nian_gan = nian_gan

        self.截路 = biao.get(self.__nian_gan).get("截路")
        self.空亡 = biao.get(self.__nian_gan).get("空亡")


"""
安旬种和空亡星位置，但是表格只是给出了旬中星
"""


class Xun_Kong_Xing:
    def __init__(self, nian_gan, nian_zhi):
        self.__nian_gan = nian_gan
        self.__nian_zhi = nian_zhi
        biao = {
            "戌": {
                "甲": "子",
                "乙": "丑",
                "丙": "寅",
                "丁": "卯",
                "戊": "辰",
                "己": "巳",
                "庚": "午",
                "辛": "未",
                "壬": "申",
                "葵": "酉"
            },
            "申": {
                "甲": "戌",
                "乙": "亥",
                "丙": "子",
                "丁": "丑",
                "戊": "寅",
                "己": "卯",
                "庚": "辰",
                "辛": "巳",
                "壬": "午",
                "葵": "未"},
            "午": {
                "甲": "申",
                "乙": "酉",
                "丙": "戌",
                "丁": "亥",
                "戊": "子",
                "己": "丑",
                "庚": "寅",
                "辛": "卯",
                "壬": "辰",
                "葵": "巳"},
            "辰": {
                "甲": "午",
                "乙": "未",
                "丙": "申",
                "丁": "酉",
                "戊": "戌",
                "己": "亥",
                "庚": "子",
                "辛": "丑",
                "壬": "寅",
                "葵": "卯"},
            "寅": {
                "甲": "辰",
                "乙": "巳",
                "丙": "午",
                "丁": "未",
                "戊": "申",
                "己": "酉",
                "庚": "戌",
                "辛": "亥",
                "壬": "子",
                "葵": "丑"},
            "子": {
                "甲": "寅",
                "乙": "卯",
                "丙": "辰",
                "丁": "巳",
                "戊": "午",
                "己": "未",
                "庚": "申",
                "辛": "酉",
                "壬": "戌",
                "葵": "亥"},
            "亥": {
                "甲": "子",
                "乙": "丑",
                "丙": "寅",
                "丁": "卯",
                "戊": "辰",
                "己": "巳",
                "庚": "午",
                "辛": "未",
                "壬": "申",
                "葵": "酉"
            },
            "酉": {
                "甲": "戌",
                "乙": "亥",
                "丙": "子",
                "丁": "丑",
                "戊": "寅",
                "己": "卯",
                "庚": "辰",
                "辛": "巳",
                "壬": "午",
                "葵": "未"},
            "未": {
                "甲": "申",
                "乙": "酉",
                "丙": "戌",
                "丁": "亥",
                "戊": "子",
                "己": "丑",
                "庚": "寅",
                "辛": "卯",
                "壬": "辰",
                "葵": "巳"},
            "巳": {
                "甲": "午",
                "乙": "未",
                "丙": "申",
                "丁": "酉",
                "戊": "戌",
                "己": "亥",
                "庚": "子",
                "辛": "丑",
                "壬": "寅",
                "葵": "卯"},
            "卯": {
                "甲": "辰",
                "乙": "巳",
                "丙": "午",
                "丁": "未",
                "戊": "申",
                "己": "酉",
                "庚": "戌",
                "辛": "亥",
                "壬": "子",
                "葵": "丑"},
            "丑": {
                "甲": "寅",
                "乙": "卯",
                "丙": "辰",
                "丁": "巳",
                "戊": "午",
                "己": "未",
                "庚": "申",
                "辛": "酉",
                "壬": "戌",
                "葵": "亥"},
        }
        self.旬空 = biao.get(nian_zhi).get(nian_gan)


"""
天伤星
天使星
天伤永在仆役宫。
天使永在疾厄宫。
"""


class Tian_Shang_Tian_Shi_Xing:
    def __init__(self, ming_gong):
        self.ming_gong = ming_gong
        yu_gong_iter = Yu_Gong(ming_gong)  # 获取所有宫所在的位置
        for temp in di_zhi.values():
            yu_gong = yu_gong_iter.__getattribute__(temp)
            if yu_gong == "疾厄":
                self.天使 = temp
            if yu_gong == "友仆":
                self.天伤 = temp




"""
用来根据月和时辰确定斗君在哪个宫起子，然后顺数流年到年支，哪个宫就是流年的斗君
"""


class Dou_jun:
    def __init__(self, yue, shi_zhi):
        """
        :param yue: 月份
        :param shi_zhi: 时辰
        """
        # shi_chen_biao = {
        #     1: "子",
        #     2: "丑",
        #     3: "寅",
        #     4: "卯",
        #     5: "辰",
        #     6: "巳",
        #     7: "午",
        #     8: "未",
        #     9: "申",
        #     10: "酉",
        #     11: "戌",
        #     12: "亥"
        # }
        #
        # self.__shi = shi_chen_biao.get(shi_zhi)
        self.__yue = yue
        self.__shi_zhi = shi_zhi
        # 子年斗君表
        biao = {
            1: {
                "子": "子",
                "丑": "丑",
                "寅": "寅",
                "卯": "卯",
                "辰": "辰",
                "巳": "巳",
                "午": "午",
                "未": "未",
                "申": "申",
                "酉": "酉",
                "戌": "戌",
                "亥": "亥"},
            2: {
                "子": "亥",
                "丑": "子",
                "寅": "丑",
                "卯": "寅",
                "辰": "卯",
                "巳": "辰",
                "午": "巳",
                "未": "午",
                "申": "未",
                "酉": "申",
                "戌": "酉",
                "亥": "戌"},
            3: {
                "子": "戌",
                "丑": "亥",
                "寅": "子",
                "卯": "丑",
                "辰": "寅",
                "巳": "卯",
                "午": "辰",
                "未": "巳",
                "申": "午",
                "酉": "未",
                "戌": "申",
                "亥": "酉"},
            4: {
                "子": "酉",
                "丑": "戌",
                "寅": "亥",
                "卯": "子",
                "辰": "丑",
                "巳": "寅",
                "午": "卯",
                "未": "辰",
                "申": "巳",
                "酉": "午",
                "戌": "未",
                "亥": "申"},
            5: {
                "子": "申",
                "丑": "酉",
                "寅": "戌",
                "卯": "亥",
                "辰": "子",
                "巳": "丑",
                "午": "寅",
                "未": "卯",
                "申": "辰",
                "酉": "巳",
                "戌": "午",
                "亥": "未"},
            6: {
                "子": "未",
                "丑": "申",
                "寅": "酉",
                "卯": "戌",
                "辰": "亥",
                "巳": "子",
                "午": "丑",
                "未": "寅",
                "申": "卯",
                "酉": "辰",
                "戌": "巳",
                "亥": "午"},
            7: {
                "子": "午",
                "丑": "未",
                "寅": "申",
                "卯": "酉",
                "辰": "戌",
                "巳": "亥",
                "午": "子",
                "未": "丑",
                "申": "寅",
                "酉": "卯",
                "戌": "辰",
                "亥": "巳"},
            8: {
                "子": "巳",
                "丑": "午",
                "寅": "未",
                "卯": "申",
                "辰": "酉",
                "巳": "戌",
                "午": "亥",
                "未": "子",
                "申": "丑",
                "酉": "寅",
                "戌": "卯",
                "亥": "辰"},
            9: {
                "子": "辰",
                "丑": "巳",
                "寅": "午",
                "卯": "未",
                "辰": "申",
                "巳": "酉",
                "午": "戌",
                "未": "亥",
                "申": "子",
                "酉": "丑",
                "戌": "寅",
                "亥": "卯"},
            10: {
                "子": "卯",
                "丑": "辰",
                "寅": "巳",
                "卯": "午",
                "辰": "未",
                "巳": "申",
                "午": "酉",
                "未": "戌",
                "申": "亥",
                "酉": "子",
                "戌": "丑",
                "亥": "寅"},
            11: {
                "子": "寅",
                "丑": "卯",
                "寅": "辰",
                "卯": "巳",
                "辰": "午",
                "巳": "未",
                "午": "申",
                "未": "酉",
                "申": "戌",
                "酉": "亥",
                "戌": "子",
                "亥": "丑"},
            12: {
                "子": "丑",
                "丑": "寅",
                "寅": "卯",
                "卯": "辰",
                "辰": "巳",
                "巳": "午",
                "午": "未",
                "未": "申",
                "申": "酉",
                "酉": "戌",
                "戌": "亥",
                "亥": "子"},
        }
        self.start_location = biao.get(self.__yue).get(self.__shi_zhi)
        self.di_zhi_iter = Di_Zhi_Iter(-1)
        # 因为要按它起子，所以实际上要更新子的位置
        self.di_zhi_iter.update(self.start_location)

    def get_liu_nian_location(self, liu_nian_nian_zhi):
        for zhi in di_zhi.values():
            if zhi == liu_nian_nian_zhi:
                break
            else:
                self.di_zhi_iter.next()  # 顺数

        return self.di_zhi_iter.now()



"""
传入命宫位置，起运年龄和阴阳男女，每个宫就代表了不同的流年范围
"""


class Da_Liu_Nian:
    def __init__(self, ming_gong, start_age, yin_yang_nan_nv):
        dizhi = Di_Zhi_Iter(1)
        dizhi.update(ming_gong)
        func = dizhi.next if (yin_yang_nan_nv == "阳男") or (yin_yang_nan_nv == "阴女") else dizhi.up
        func2 = dizhi.up if (yin_yang_nan_nv == "阳男") or (yin_yang_nan_nv == "阴女") else dizhi.next
        func2()
        interval_time = 10

        self.__setattr__(func(), f"{start_age}-{start_age + interval_time - 1}")
        start_age += interval_time
        self.__setattr__(func(), f"{start_age}-{start_age + interval_time - 1}")
        start_age += interval_time
        self.__setattr__(func(), f"{start_age}-{start_age + interval_time - 1}")
        start_age += interval_time
        self.__setattr__(func(), f"{start_age}-{start_age + interval_time - 1}")
        start_age += interval_time
        self.__setattr__(func(), f"{start_age}-{start_age + interval_time - 1}")
        start_age += interval_time
        self.__setattr__(func(), f"{start_age}-{start_age + interval_time - 1}")
        start_age += interval_time
        self.__setattr__(func(), f"{start_age}-{start_age + interval_time - 1}")
        start_age += interval_time
        self.__setattr__(func(), f"{start_age}-{start_age + interval_time - 1}")
        start_age += interval_time
        self.__setattr__(func(), f"{start_age}-{start_age + interval_time - 1}")
        start_age += interval_time
        self.__setattr__(func(), f"{start_age}-{start_age + interval_time - 1}")
        start_age += interval_time
        self.__setattr__(func(), f"{start_age}-{start_age + interval_time - 1}")
        start_age += interval_time
        self.__setattr__(func(), f"{start_age}-{start_age + interval_time - 1}")
        start_age += interval_time


"""
小流年是男顺女逆，
"""


class Xiao_Liu_nian:
    def __init__(self, nian_zhi, gender):
        self.__iter = Di_Zhi_Iter(0)
        self.__gender = gender
        biao = {
            "申": "戌",
            "子": "戌",
            "辰": "戌",
            "巳": "未",
            "酉": "未",
            "丑": "未",
            "亥": "丑",
            "卯": "丑",
            "未": "丑",
            "寅": "辰",
            "午": "辰",
            "戌": "辰",
        }
        # 获取1，13，25，37,49等所在的宫
        qi_shi_gong = biao.get(nian_zhi)
        # 重置1岁的位置到对应的位置上
        self.__iter.update(qi_shi_gong)

    def get_age_location(self, age):
        for i in range(1, age):
            if self.__gender == "男":
                self.__iter.next()
            else:
                self.__iter.up()

        return self.__iter.now()



class Shi_Gan:
    def __init__(self, tian_gan, yin_yang, wu_xing):
        self.tian_gan = tian_gan
        self.yin_yang = yin_yang
        self.wu_xing = wu_xing


# 表示十天干的迭代器
class Tian_Gan_Iter:

    def __init__(self, start):
        self.update(start)

    def next(self):
        self.current += 1
        if self.current > 10:
            self.current = 1

        return tian_gan.get(str(self.current))

    def now(self):
        return tian_gan.get(str(self.current))

    def up(self):
        self.current -= 1
        if self.current < 1:
            self.current = 10

        return tian_gan.get(str(self.current))

    def update(self, start):
        """
        设置天干起始位置
        :param start:
        :return:
        """
        flag = True
        for k in tian_gan:
            t = tian_gan.get(k)
            if t == start:
                self.current = int(k)
                flag = False
                break
        if flag:
            raise Exception("给定非有效天干{}".format(start))

class Bo_Shi_Shi_Er_Xing:
    def __init__(self, lu_cun_location, yin_yang_nan_nv="阳男"):
        self.__lu_cun_location = lu_cun_location
        di_zhi_iter = Di_Zhi_Iter(-1)
        di_zhi_iter.update(lu_cun_location)
        func = di_zhi_iter.next if (yin_yang_nan_nv == "阳男") or (yin_yang_nan_nv == "阴女") else di_zhi_iter.up
        self.__setattr__("博士", lu_cun_location)
        self.__setattr__("力士", func())
        self.__setattr__("青龙", func())
        self.__setattr__("小耗", func())
        self.__setattr__("将军", func())
        self.__setattr__("奏书", func())
        self.__setattr__("飞廉", func())
        self.__setattr__("喜神", func())
        self.__setattr__("病符", func())
        self.__setattr__("大耗", func())
        self.__setattr__("伏兵", func())
        self.__setattr__("官府", func())

class Ming_Shen_Gong:

    def __init__(self, yue, shi_zhi):
        self.yue = yue
        self.shi = shi_zhi

        ming = Di_Zhi_Iter(yue)
        shen = Di_Zhi_Iter(yue)

        flag = True
        for i in range(1, 13):
            dz = di_zhi.get(str(i))
            if dz != self.shi:
                ming.up()
                shen.next()
            else:
                flag = False
                break
        if flag:
            raise Exception("未能匹配时辰，查找命宫身宫失败")
        # for i in range(1, shi_zhi):
        #     ming.up()
        #     shen.next()

        self.ming = ming.now()
        self.shen = shen.now()


class Ming_Zhu:
    def __init__(self, ming_gong):
        biao = {
            "子": "贪狼",
            "丑": "巨门",
            "寅": "禄存",
            "卯": "文曲",
            "辰": "廉贞",
            "巳": "武曲",
            "午": "破军",
            "未": "武曲",
            "申": "廉贞",
            "酉": "文曲",
            "戌": "禄存",
            "亥": "巨门",
        }
        self.__ming_gong = ming_gong
        self.命主 = biao.get(ming_gong)


class Shen_Zhu:
    def __init__(self, nian_zhi):
        self.__nian_zhi = nian_zhi
        biao = {
            "子": "火星",
            "丑": "天相",
            "寅": "天梁",
            "卯": "天同",
            "辰": "文昌",
            "巳": "天机",
            "午": "火星",
            "未": "天相",
            "申": "天梁",
            "酉": "天同",
            "戌": "文昌",
            "亥": "天机",
        }
        self.身主 = biao.get(nian_zhi)



shi_gan_biao = {
    "甲": Shi_Gan("甲", "阳", "木"),
    "乙": Shi_Gan("乙", "阴", "木"),
    "丙": Shi_Gan("丙", "阳", "火"),
    "丁": Shi_Gan("丁", "阴", "火"),
    "戊": Shi_Gan("戊", "阳", "土"),
    "己": Shi_Gan("己", "阴", "土"),
    "庚": Shi_Gan("庚", "阳", "金"),
    "辛": Shi_Gan("辛", "阴", "金"),
    "壬": Shi_Gan("壬", "阳", "水"),
    "葵": Shi_Gan("葵", "阴", "水"),
}

# 天干
tian_gan = {
    "1": "甲",
    "2": "乙",
    "3": "丙",
    "4": "丁",
    "5": "戊",
    "6": "己",
    "7": "庚",
    "8": "辛",
    "9": "壬",
    "10": "葵",
}




bei_dou_zhu_xing_biao = {
    "子": {
        "天机": "亥",
        "太阳": "酉",
        "武曲": "申",
        "天同": "未",
        "廉贞": "辰",
        "天府": "辰",
    },
    "丑": {
        "天机": "子",
        "太阳": "戌",
        "武曲": "酉",
        "天同": "申",
        "廉贞": "巳",
        "天府": "卯",
    },
    "寅": {
        "天机": "丑",
        "太阳": "亥",
        "武曲": "戌",
        "天同": "酉",
        "廉贞": "午",
        "天府": "寅",
    },
    "卯": {
        "天机": "寅",
        "太阳": "子",
        "武曲": "亥",
        "天同": "戌",
        "廉贞": "未",
        "天府": "丑",
    },
    "辰": {
        "天机": "卯",
        "太阳": "丑",
        "武曲": "子",
        "天同": "亥",
        "廉贞": "申",
        "天府": "子",
    },
    "巳": {
        "天机": "辰",
        "太阳": "寅",
        "武曲": "丑",
        "天同": "子",
        "廉贞": "酉",
        "天府": "亥",
    },
    "午": {
        "天机": "巳",
        "太阳": "卯",
        "武曲": "寅",
        "天同": "丑",
        "廉贞": "戌",
        "天府": "戌",
    },
    "未": {
        "天机": "午",
        "太阳": "辰",
        "武曲": "卯",
        "天同": "寅",
        "廉贞": "亥",
        "天府": "酉",
    },
    "申": {
        "天机": "未",
        "太阳": "巳",
        "武曲": "辰",
        "天同": "卯",
        "廉贞": "子",
        "天府": "申",
    },
    "酉": {
        "天机": "申",
        "太阳": "午",
        "武曲": "巳",
        "天同": "辰",
        "廉贞": "丑",
        "天府": "未",
    },
    "戌": {
        "天机": "酉",
        "太阳": "未",
        "武曲": "午",
        "天同": "巳",
        "廉贞": "寅",
        "天府": "午",
    },
    "亥": {
        "天机": "戌",
        "太阳": "申",
        "武曲": "未",
        "天同": "午",
        "廉贞": "卯",
        "天府": "巳",
    },
}

# 天府星的位置根据紫薇星确定下来之后，就可以根据天府星确定其他主星
nan_dou_zhu_xing_biao = {
    "子": {
        "太阴": "丑",
        "贪狼": "寅",
        "巨门": "卯",
        "天相": "辰",
        "天梁": "巳",
        "七杀": "午",
        "破军": "戌"
    },
    "丑": {
        "太阴": "寅",
        "贪狼": "卯",
        "巨门": "辰",
        "天相": "巳",
        "天梁": "午",
        "七杀": "未",
        "破军": "亥"},
    "寅": {
        "太阴": "卯",
        "贪狼": "辰",
        "巨门": "巳",
        "天相": "午",
        "天梁": "未",
        "七杀": "申",
        "破军": "子"},
    "卯": {
        "太阴": "辰",
        "贪狼": "巳",
        "巨门": "午",
        "天相": "未",
        "天梁": "申",
        "七杀": "酉",
        "破军": "丑"},
    "辰": {
        "太阴": "巳",
        "贪狼": "午",
        "巨门": "未",
        "天相": "申",
        "天梁": "酉",
        "七杀": "戌",
        "破军": "寅"},
    "巳": {
        "太阴": "午",
        "贪狼": "未",
        "巨门": "申",
        "天相": "酉",
        "天梁": "戌",
        "七杀": "亥",
        "破军": "卯"},
    "午": {
        "太阴": "未",
        "贪狼": "申",
        "巨门": "酉",
        "天相": "戌",
        "天梁": "亥",
        "七杀": "子",
        "破军": "辰"},
    "未": {
        "太阴": "申",
        "贪狼": "酉",
        "巨门": "戌",
        "天相": "亥",
        "天梁": "子",
        "七杀": "丑",
        "破军": "巳"},
    "申": {
        "太阴": "酉",
        "贪狼": "戌",
        "巨门": "亥",
        "天相": "子",
        "天梁": "丑",
        "七杀": "寅",
        "破军": "午"},
    "酉": {
        "太阴": "戌",
        "贪狼": "亥",
        "巨门": "子",
        "天相": "丑",
        "天梁": "寅",
        "七杀": "卯",
        "破军": "未"},
    "戌": {
        "太阴": "亥",
        "贪狼": "子",
        "巨门": "丑",
        "天相": "寅",
        "天梁": "卯",
        "七杀": "辰",
        "破军": "申"},
    "亥": {
        "太阴": "子",
        "贪狼": "丑",
        "巨门": "寅",
        "天相": "卯",
        "天梁": "辰",
        "七杀": "巳",
        "破军": "酉"},
}


wu_xing_list = {
    2: "水二局",
    3: "木三局",
    4: "金四局",
    5: "土五局",
    6: "火六局"
}


class Wu_Xing:
    def __init__(self, nian_gan, ming_gong):
        self.nian_gan = nian_gan
        self.ming_gong = ming_gong

    def __get_info(self, num):
        return [num, wu_xing_list.get(num)]

    def get_wu_xing(self):
        """
        获取起运岁数和五行局对象，一个键值对对象
        :return:
        """
        wu_xing_biao = {
            "甲": {
                "子": self.__get_info(2),
                "丑": self.__get_info(2),
                "寅": self.__get_info(6),
                "卯": self.__get_info(6),
                "辰": self.__get_info(3),
                "巳": self.__get_info(3),
                "午": self.__get_info(5),
                "未": self.__get_info(5),
                "申": self.__get_info(4),
                "酉": self.__get_info(4),
                "戌": self.__get_info(6),
                "亥": self.__get_info(6),

            },
            "己": {
                "子": self.__get_info(2),
                "丑": self.__get_info(2),
                "寅": self.__get_info(6),
                "卯": self.__get_info(6),
                "辰": self.__get_info(3),
                "巳": self.__get_info(3),
                "午": self.__get_info(5),
                "未": self.__get_info(5),
                "申": self.__get_info(4),
                "酉": self.__get_info(4),
                "戌": self.__get_info(6),
                "亥": self.__get_info(6),
            },
            "乙": {

                "子": self.__get_info(6),
                "丑": self.__get_info(6),
                "寅": self.__get_info(5),
                "卯": self.__get_info(5),
                "辰": self.__get_info(4),
                "巳": self.__get_info(4),
                "午": self.__get_info(3),
                "未": self.__get_info(3),
                "申": self.__get_info(2),
                "酉": self.__get_info(2),
                "戌": self.__get_info(5),
                "亥": self.__get_info(5),
            },
            "庚": {
                "子": self.__get_info(6),
                "丑": self.__get_info(6),
                "寅": self.__get_info(5),
                "卯": self.__get_info(5),
                "辰": self.__get_info(4),
                "巳": self.__get_info(4),
                "午": self.__get_info(3),
                "未": self.__get_info(3),
                "申": self.__get_info(2),
                "酉": self.__get_info(2),
                "戌": self.__get_info(5),
                "亥": self.__get_info(5),
            },
            "丙": {
                "子": self.__get_info(5),
                "丑": self.__get_info(5),
                "寅": self.__get_info(3),
                "卯": self.__get_info(3),
                "辰": self.__get_info(2),
                "巳": self.__get_info(2),
                "午": self.__get_info(4),
                "未": self.__get_info(4),
                "申": self.__get_info(6),
                "酉": self.__get_info(6),
                "戌": self.__get_info(3),
                "亥": self.__get_info(3),
            },
            "辛": {
                "子": self.__get_info(5),
                "丑": self.__get_info(5),
                "寅": self.__get_info(3),
                "卯": self.__get_info(3),
                "辰": self.__get_info(2),
                "巳": self.__get_info(2),
                "午": self.__get_info(4),
                "未": self.__get_info(4),
                "申": self.__get_info(6),
                "酉": self.__get_info(6),
                "戌": self.__get_info(3),
                "亥": self.__get_info(3),
            },
            "丁": {
                "子": self.__get_info(3),
                "丑": self.__get_info(3),
                "寅": self.__get_info(4),
                "卯": self.__get_info(4),
                "辰": self.__get_info(6),
                "巳": self.__get_info(6),
                "午": self.__get_info(2),
                "未": self.__get_info(2),
                "申": self.__get_info(5),
                "酉": self.__get_info(5),
                "戌": self.__get_info(4),
                "亥": self.__get_info(4),
            },
            "壬": {
                "子": self.__get_info(3),
                "丑": self.__get_info(3),
                "寅": self.__get_info(4),
                "卯": self.__get_info(4),
                "辰": self.__get_info(6),
                "巳": self.__get_info(6),
                "午": self.__get_info(2),
                "未": self.__get_info(2),
                "申": self.__get_info(5),
                "酉": self.__get_info(5),
                "戌": self.__get_info(4),
                "亥": self.__get_info(4),
            },
            "戊": {
                "子": self.__get_info(4),
                "丑": self.__get_info(4),
                "寅": self.__get_info(2),
                "卯": self.__get_info(2),
                "辰": self.__get_info(5),
                "巳": self.__get_info(5),
                "午": self.__get_info(6),
                "未": self.__get_info(6),
                "申": self.__get_info(3),
                "酉": self.__get_info(3),
                "戌": self.__get_info(2),
                "亥": self.__get_info(2),
            },
            "葵": {
                "子": self.__get_info(4),
                "丑": self.__get_info(4),
                "寅": self.__get_info(2),
                "卯": self.__get_info(2),
                "辰": self.__get_info(5),
                "巳": self.__get_info(5),
                "午": self.__get_info(6),
                "未": self.__get_info(6),
                "申": self.__get_info(3),
                "酉": self.__get_info(3),
                "戌": self.__get_info(2),
                "亥": self.__get_info(2),
            }
        }
        return wu_xing_biao.get(self.nian_gan).get(self.ming_gong)

class Yu_Gong:

    def __init__(self, ming):

        dizhi = Di_Zhi_Iter(1)
        dizhi.update(ming)

        self.__setattr__(ming,"命")
        self.__setattr__(dizhi.next(),"父母")
        self.__setattr__(dizhi.next(), "福德")
        self.__setattr__(dizhi.next(), "田宅")
        self.__setattr__(dizhi.next(), "事业")
        self.__setattr__(dizhi.next(), "友仆")
        self.__setattr__(dizhi.next(), "迁移")
        self.__setattr__(dizhi.next(), "疾厄")
        self.__setattr__(dizhi.next(), "财帛")
        self.__setattr__(dizhi.next(), "子女")
        self.__setattr__(dizhi.next(), "夫妻")
        self.__setattr__(dizhi.next(), "兄弟")

class Shi_Er_Gong_Tian_Gan:
    def __init__(self, nian_gan):
        if nian_gan in tian_gan.values():
            self.nian_gan = nian_gan
            tian_gan_iter = self.get_tian_gan_iter()
            di_zhi = Di_Zhi_Iter(0)
            for i in range(12):
                t = tian_gan_iter.next()
                d = di_zhi.next()
                self.__setattr__(d, t)
        else:
            raise Exception(f"指定了不存在的天干 =>  {nian_gan}")

    def get_tian_gan_iter(self):
        if self.nian_gan == "甲" or self.nian_gan == "己":
            return Tian_Gan_Iter("乙")  # 设置未乙，下一个是丙
        if self.nian_gan == "乙" or self.nian_gan == "庚":
            return Tian_Gan_Iter("丁")  # 设置为丁，下一个是戊
        if self.nian_gan == "丙" or self.nian_gan == "辛":
            return Tian_Gan_Iter("己")
        if self.nian_gan == "丁" or self.nian_gan == "壬":
            return Tian_Gan_Iter("辛")
        if self.nian_gan == "戊" or self.nian_gan == "葵":
            return Tian_Gan_Iter("葵")

class Di_Zhi_Iter:

    def __init__(self, yue):
        current = yue + 2  # 因为时机是从寅宫开始的算一月，这里的1-12没有意义，只是为了好算
        if current > 12:
            current = current - 12
        self.__current = current

    def update(self, current_location):
        """
        根据命宫在那个宫更新此人的迭代器，用于后面的余宫使用
        也会在别的方面用到
        :param current_location:设置当前位置
        :return:
        """
        flag=True
        for k in di_zhi:
            dizhi = di_zhi.get(k)
            if dizhi == current_location:
                self.__current = int(k)
                flag=False
                break
        if flag:
            raise Exception("给定非有效地支")

    def next(self):
        self.__current += 1
        if self.__current > 12:
            self.__current = 1

        return di_zhi.get(str(self.__current))

    def now(self):
        return di_zhi.get(str(self.__current))

    def up(self):
        self.__current -= 1
        if self.__current < 1:
            self.__current = 12

        return di_zhi.get(str(self.__current))


class Shi_Er_Zhi:
    def __init__(self,di_zhi,yin_yang,wu_xing,sheng_xiao):
        self.di_zhi=di_zhi
        self.yin_yang=yin_yang
        self.wu_xing=wu_xing
        self.sheng_xiao=sheng_xiao


shi_er_di_zhi_biao={

    "子":Shi_Er_Zhi("子","阳","水","鼠"),
    "丑":Shi_Er_Zhi("丑","阴","土","牛"),
    "寅":Shi_Er_Zhi("寅","阳","木","虎"),
    "卯":Shi_Er_Zhi("卯","阴","木","兔"),
    "辰":Shi_Er_Zhi("辰","阳","土","龙"),
    "巳":Shi_Er_Zhi("巳","阴","火","蛇"),
    "午":Shi_Er_Zhi("午","阳","火","马"),
    "未":Shi_Er_Zhi("未","阴","土","羊"),
    "申":Shi_Er_Zhi("申","阳","金","猴"),
    "酉":Shi_Er_Zhi("酉","阴","金","鸡"),
    "戌":Shi_Er_Zhi("戌","阳","土","狗"),
    "亥":Shi_Er_Zhi("亥","阴","水","猪"),

}

di_zhi = {
    "1": "子",
    "2": "丑",
    "3": "寅",
    "4": "卯",
    "5": "辰",
    "6": "巳",
    "7": "午",
    "8": "未",
    "9": "申",
    "10": "酉",
    "11": "戌",
    "12": "亥"
}

__version__="1.0.1"
# Config.set("kivy", "encoding", "utf-8")
# Config.set("graphics", "default_font", "tianji/config/font/simsun.ttc")
Builder.load_string('''
<MyScreen>
    canvas.before:
        Color
            #rgba: 0, 0, 0, 1
            #rgba: 0.8, 0.8, 0.8, 1
            rgba: 1, 1, 1, 1

        Rectangle:
            # self here refers to the widget i.e FloatLayout
            pos: self.pos
            size: self.size

''')

class GongScreen(BoxLayout):
    def __init__(self, gong_obj=None, **kwargs):
        kwargs["orientation"] = "vertical"
        kwargs["padding"] = 10
        super(GongScreen, self).__init__(**kwargs)

        self.other_info = [
            f"{gong_obj.gong_tian_gan}{gong_obj.location}",  # 宫天干+ 宫位
            gong_obj.nei_zang,  # 内脏
            # gong_obj.qu_gan,  # 躯干

        ]

        self.gong_info = [

            gong_obj.da_xian,  # 大流年
            gong_obj.name,  # 宫所主的名称
        ]

        # 表示这个宫的不同等级的星耀
        self.stars = gong_obj.stars

        m = BoxLayout()
        t = BoxLayout()
        t_l = BoxLayout()
        t_r = BoxLayout()
        b = BoxLayout()

        b_l = BoxLayout()
        b_r = BoxLayout()
        b_m = BoxLayout()
        t.add_widget(t_l)
        t.add_widget(t_r)
        b.add_widget(b_l)
        b.add_widget(b_m)
        b.add_widget(b_r)
        self.add_widget(t)
        self.add_widget(m)
        self.add_widget(b)

        dui_qi_fang_shi = "vertical"  # horizontal
        t_l.add_widget(StarListScreen(star_list=self.stars.get("甲"), orientation=dui_qi_fang_shi))
        t_r.add_widget(StarListScreen(star_list=self.stars.get("乙"), orientation=dui_qi_fang_shi))
        b_l.add_widget(StarListScreen(star_list=self.stars.get("丙"), orientation=dui_qi_fang_shi))
        b_r.add_widget(StarListScreen(star_list=self.stars.get("丁"), orientation=dui_qi_fang_shi))
        m.add_widget(StarListScreen(star_list=self.other_info, orientation=dui_qi_fang_shi))
        b_m.add_widget(StarListScreen(star_list=self.gong_info, orientation=dui_qi_fang_shi))

        self.bind(size=self._update_rect, pos=self._update_rect)

        with self.canvas.before:
            Color(0, 0, 0, 1)  # set the color to red
            self.rect = Line(rectangle=(self.x, self.y, self.width, self.height), width=1.5)

    def _update_rect(self, instance, value):
        self.rect.rectangle = (self.x, self.y, self.width, self.height)

class PanTime:
    """
    表示紫薇斗数的一个排盘时间,使用农历时间作为输入
    """

    def __init__(self, nian, yue, ri, shi):
        """
        默认农历
        :param nian: 农历年
        :param yue: 农历月
        :param ri: 农历日
        :param shi: 几点,会转化成时辰
        """

        self.nian = nian
        self.yue = yue
        self.ri = ri
        self.shi = shi
        self.day_info = sxtwl.fromLunar(self.nian, self.yue, self.ri)
        self.get_ba_zi()

    def get_ba_zi(self):
        Gan = ["甲", "乙", "丙", "丁", "戊", "己", "庚", "辛", "壬", "癸"]
        Zhi = ["子", "丑", "寅", "卯", "辰", "巳", "午", "未", "申", "酉", "戌", "亥"]
        # ShX = ["鼠", "牛", "虎", "兔", "龙", "蛇", "马", "羊", "猴", "鸡", "狗", "猪"]

        # yTG = self.day_info.getYearGZ(False) # 按春节这天作为两年分割线
        yTG = self.day_info.getYearGZ(True)  # 按春分这天作为两年的分割线
        mTG = self.day_info.getMonthGZ()
        dTG = self.day_info.getDayGZ()
        self.ntg = Gan[yTG.tg]
        self.ndz = Zhi[yTG.dz]

        self.ytg = Gan[mTG.tg]
        self.ydz = Zhi[mTG.dz]

        self.rtg = Gan[dTG.tg]
        self.rdz = Zhi[dTG.dz]

        # 时干支
        hTG = sxtwl.getShiGz(dTG.tg, self.shi)
        self.stg = Gan[hTG.tg]
        self.sdz = Zhi[hTG.dz]
        return [self.ntg, self.ndz, self.ytg, self.ydz, self.rtg, self.rdz, self.stg, self.sdz]

    def lunar_to_solar(self):
        """
        农历转新历,时间是不变的
        :param nian:
        :param yue:
        :param ri:
        :return:
        """

        y = self.day_info.getSolarYear()
        m = self.day_info.getSolarMonth()
        d = self.day_info.getSolarDay()
        return y, m, d

    def get_jie_qi(self):
        """
        获取这一天是不是节气，因为涉及到跨年
        :return:
        """
        jqmc = ["冬至", "小寒", "大寒", "立春", "雨水", "惊蛰", "春分", "清明", "谷雨", "立夏",
                "小满", "芒种", "夏至", "小暑", "大暑", "立秋", "处暑", "白露", "秋分", "寒露", "霜降",
                "立冬", "小雪", "大雪"]
        if self.day_info.hasJieQi():
            # print('节气：%s' % jqmc[self.day_info.getJieQi()])
            # 获取节气的儒略日数
            jd = self.day_info.getJieQiJD()
            # 将儒略日数转换成年月日时秒
            t = sxtwl.JD2DD(jd)

            # 注意，t.s是小数，需要四舍五入
            # print("节气时间:%d-%d-%d %d:%d:%d" % (t.Y, t.M, t.D, t.h, t.m, round(t.s)))
            return True, jqmc[self.day_info.getJieQi()], (t.Y, t.M, t.D, t.h, t.m, round(t.s))
        else:
            return False, None, None

    @staticmethod
    def solar_to_lunar(nian, yue, ri):
        """
        新历转农历
        :param nian:
        :param yue:
        :param ri:
        :return:
        """
        day = sxtwl.fromSolar(nian, yue, ri)
        y = day.getLunarYear()
        m = day.getLunarMonth()
        d = day.getLunarDay()
        return y, m, d

class StarListScreen(BoxLayout):
    def __init__(self, star_list, **kwargs):
        kwargs["spacing"] = 10

        self.align = ('left', 'top')
        super(StarListScreen, self).__init__(**kwargs)
        for star in star_list:
            button = Label(text=star)
            set_font(button)
            button.font_blended = True
            button.color = (0, 0, 0, 1)
            self.add_widget(button)
class MyScreen(BoxLayout):

    pass
class AppScreen(MyScreen):

    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.user = MingPanDate()
        self.user.pai_pan = self.pai_pan
        self.gongs = {
            "子": GongScreen(Gong("子")),
            "丑": GongScreen(Gong("丑")),
            "寅": GongScreen(Gong("寅")),
            "卯": GongScreen(Gong("卯")),
            "辰": GongScreen(Gong("辰")),
            "巳": GongScreen(Gong("巳")),
            "午": GongScreen(Gong("午")),
            "未": GongScreen(Gong("未")),
            "申": GongScreen(Gong("申")),
            "酉": GongScreen(Gong("酉")),
            "戌": GongScreen(Gong("戌")),
            "亥": GongScreen(Gong("亥")),
        }
        self.init_time = True
        self.pai_pan()

    def pai_pan(self, ming_pan=None):
        if not ming_pan is None:
            gongs = {
                "子": GongScreen(ming_pan.gongs.get("子")),
                "丑": GongScreen(ming_pan.gongs.get("丑")),
                "寅": GongScreen(ming_pan.gongs.get("寅")),
                "卯": GongScreen(ming_pan.gongs.get("卯")),
                "辰": GongScreen(ming_pan.gongs.get("辰")),
                "巳": GongScreen(ming_pan.gongs.get("巳")),
                "午": GongScreen(ming_pan.gongs.get("午")),
                "未": GongScreen(ming_pan.gongs.get("未")),
                "申": GongScreen(ming_pan.gongs.get("申")),
                "酉": GongScreen(ming_pan.gongs.get("酉")),
                "戌": GongScreen(ming_pan.gongs.get("戌")),
                "亥": GongScreen(ming_pan.gongs.get("亥")),
            }
            self.gongs = gongs
        self.clear_widgets()
        root = BoxLayout(orientation="vertical")
        root.padding = 20
        root.spacing = 0
        shui_ping_1 = BoxLayout(orientation="horizontal")
        shui_ping_1.add_widget(self.gongs.get("巳"))
        shui_ping_1.add_widget(self.gongs.get("午"))
        shui_ping_1.add_widget(self.gongs.get("未"))
        shui_ping_1.add_widget(self.gongs.get("申"))
        root.add_widget(shui_ping_1)

        shui_ping_2 = BoxLayout(orientation="horizontal")
        shui_ping_2.add_widget(self.gongs.get("辰"))
        # shui_ping_2.add_widget(Label(text=""))
        if self.init_time:
            shui_ping_2.add_widget(self.user)
            self.init_time = False
        else:
            old = self.user
            self.user = MingPanDate()
            self.user.update_ming_pan_time(old)
            shui_ping_2.add_widget(self.user)

        shui_ping_2.add_widget(Label(text=""))
        shui_ping_2.add_widget(self.gongs.get("酉"))
        root.add_widget(shui_ping_2)

        shui_ping_3 = BoxLayout(orientation="horizontal")
        shui_ping_3.add_widget(self.gongs.get("卯"))
        shui_ping_3.add_widget(Label(text=""))
        shui_ping_3.add_widget(Label(text=""))
        shui_ping_3.add_widget(self.gongs.get("戌"))
        root.add_widget(shui_ping_3)

        shui_ping_4 = BoxLayout(orientation="horizontal")
        shui_ping_4.add_widget(self.gongs.get("寅"))
        shui_ping_4.add_widget(self.gongs.get("丑"))
        shui_ping_4.add_widget(self.gongs.get("子"))
        shui_ping_4.add_widget(self.gongs.get("亥"))
        root.add_widget(shui_ping_4)
        self.add_widget(root)

    def on_close(self, *args, **kwargs):
        print("")

Config.set('input', 'mouse', 'mouse,multitouch_on_demand')

class Gong:
    """
    表示紫薇斗数的十二个宫的容器
    """

    def __init__(self, location):
        nei_zang = {
            "子": "胆",
            "丑": "肝",
            "寅": "肺",
            "卯": "大肠",
            "辰": "胃",
            "巳": "脾",
            "午": "先天心脏",
            "未": "小肠",
            "申": "膀胱",
            "酉": "肾",
            "戌": "后天心脏",
            "亥": "三焦",
        }
        qu_gan = {
            "子":
                """膀胱、卵巢、子宫、睾丸""",
            "丑": """膀胱、卵巢、子宫、睾丸""",
            "寅": "右足",
            "卯": "右胁",
            "辰": "右胸",
            "巳": "右肩",
            "午": "脖子、脑袋",
            "未": "脖子、脑袋",
            "申": "左肩",
            "酉": "左胸",
            "戌": "左胁",
            "亥": "左足",
        }
        self.location = location
        self.gong_tian_gan = ""
        self.da_xian = ""
        self.name = ""
        self.nei_zang = nei_zang.get(self.location)
        self.qu_gan = qu_gan.get(self.location)

        # 表示每个等级的星耀，不同等级的星耀会排在不同位置
        self.stars = {
            "甲": [],
            "乙": [],
            "丙": [],
            "丁": []
        }

    def get_san_fang(self, pan):
        """
        获取此宫的三方结果
        :param pan: 排盘对象
        :return:
        """
        di_zhi_iter = Di_Zhi_Iter(-1)
        di_zhi_iter.update(self.location)
        for i in range(4):
            di_zhi_iter.next()
        shi_ye_gong_location = di_zhi_iter.now()
        for i in range(2):
            di_zhi_iter.next()
        qian_yi_gong_location = di_zhi_iter.now()
        for i in range(2):
            di_zhi_iter.next()
        cai_bo_location = di_zhi_iter.now()
        return [pan.gongs.get(shi_ye_gong_location),
                pan.gongs.get(qian_yi_gong_location),
                pan.gongs.get(cai_bo_location)]

    def append_start(self, star_info):
        star_name = star_info.name
        level = star_info.level
        if level != "四化":  # 不是四化星
            self.stars.get(level).append(f"{star_name}{liang_du_biao.get(self.location).get(star_name, '')}")
        else:
            # 是四化星
            hua_xing = star_info.belong_star
            old_star_name = f"{hua_xing}{liang_du_biao.get(self.location).get(hua_xing, '')}"
            remove_level = self.__remove_star__(old_star_name)
            new_star_name = f"{hua_xing}{liang_du_biao.get(self.location).get(hua_xing, '')} {star_info.name}"
            self.stars.get(remove_level).append(new_star_name)

    def set_name(self, name):
        """
        设置宫名称
        :param name:
        :return:
        """
        self.name = "{}宫".format(name)

    def set_da_xian(self, da_xain):
        self.da_xian = da_xain

    def set_tian_gan(self, gong_tian_gan):
        """
        设置宫名称
        :param gong_tian_gan:
        :return:
        """
        self.gong_tian_gan = gong_tian_gan

    def __remove_star__(self, remove_star):
        for level, stars in self.stars.items():
            for star in stars:
                if star == remove_star:
                    stars.remove(star)
                    return level

    def pai_pan(self):
        """
        排盘,暂时模拟
        :return:
        """
        print(f"{self.da_xian}")
        print(f"{self.gong_tian_gan}{self.location}\n")
        for k, v in self.stars.items():
            print(k, self.stars.get(k))


class Pan:
    """
    表示紫薇斗数的一个排盘结果

    """

    def __init__(self, pan_time, gender):
        """
        需要按农历来
        :param pan_time:
        :param gender:
        """
        self.pan_time = pan_time
        self.ba_zi = self.pan_time.get_ba_zi()
        self.gender = gender
        self.gongs = {
            "子": Gong("子"),
            "丑": Gong("丑"),
            "寅": Gong("寅"),
            "卯": Gong("卯"),
            "辰": Gong("辰"),
            "巳": Gong("巳"),
            "午": Gong("午"),
            "未": Gong("未"),
            "申": Gong("申"),
            "酉": Gong("酉"),
            "戌": Gong("戌"),
            "亥": Gong("亥"),
        }
        self.star_loaction = {}
        self.liu_nian_dou_jun = "子"
        self.pai_pan()

    def append_start(self, location, star):
        self.star_loaction[star] = location

    def pai_pan(self):
        self.step1()
        self.step2()
        self.step3()
        self.step4()  # 安流年星，现在是按出生年安

    def step1(self):
        """
        安命宫和身宫
        定五行局
        :return:
        """
        # 安命宫和身宫
        m = Ming_Shen_Gong(self.pan_time.yue, self.pan_time.sdz)
        self.ming_gong_location = m.ming
        self.shen_gong_location = m.shen
        # 安余宫和他们的天干
        yu = Yu_Gong(self.ming_gong_location)
        gong_tian_gan = Shi_Er_Gong_Tian_Gan(self.pan_time.ntg)
        for g, in self.gongs.keys():
            self.gongs.get(g).set_name(yu.__getattribute__(g))  # 设置十二宫名
            self.gongs.get(g).set_tian_gan(gong_tian_gan.__getattribute__(g))  # 设置十二宫年干

        # 确定五行局和起运年龄
        wx = Wu_Xing(self.pan_time.ntg, self.ming_gong_location)
        res = wx.get_wu_xing()
        self.wu_xing_jv_name = res[1]
        self.start_age = res[0]
        self.yin_yang = shi_gan_biao.get(self.pan_time.ntg).yin_yang

        # 确定命主和身主
        self.ming_zhu_xing = Ming_Zhu(self.ming_gong_location).命主
        self.shen_zhu_xing = Shen_Zhu(self.pan_time.ndz).身主

    def step2(self):
        # 安紫微星
        zi_wei_location = zi_wei_biao.get(self.pan_time.ri).get(self.wu_xing_jv_name)
        self.gongs.get(zi_wei_location).append_start(dou_shu_stars.get("紫薇"))
        self.append_start(zi_wei_location, "紫薇")
        # 安北斗主星
        zhu_xing_dic = bei_dou_zhu_xing_biao.get(zi_wei_location)
        tian_fu_location = "not found"
        for star, location in zhu_xing_dic.items():
            self.gongs.get(location).append_start(dou_shu_stars.get(star))
            self.append_start(location, star)
            if star == "天府":
                tian_fu_location = location
        # 安南斗主星
        tian_fu_dic = nan_dou_zhu_xing_biao.get(tian_fu_location)
        for star, location in tian_fu_dic.items():
            self.gongs.get(location).append_start(dou_shu_stars.get(star))
            self.append_start(location, star)

        # 安时系诸星
        wen_chang_location = ""
        wen_qu_location = ""
        for star, sub_dic in shi_chen_xing_biao.items():
            location = sub_dic.get(self.pan_time.sdz)
            self.gongs.get(location).append_start(dou_shu_stars.get(star))
            self.append_start(location, star)
            if star == "文昌":
                wen_chang_location = sub_dic.get(self.pan_time.sdz)
            if star == "文曲":
                wen_qu_location = sub_dic.get(self.pan_time.sdz)

        star = "恩光"
        location = CalculateLocation(wen_chang_location, self.pan_time.ri, star_name=star).calculate()
        self.gongs.get(location).append_start(dou_shu_stars.get(star))
        self.append_start(location, star)
        star = "天贵"
        location = CalculateLocation(wen_qu_location, self.pan_time.ri, star_name=star).calculate()
        self.gongs.get(location).append_start(dou_shu_stars.get(star))
        self.append_start(location, star)

        # 安火星铃星
        huo_ling_dic = huo_ling_xing_biao.get(self.pan_time.ndz)
        for star, sub_dic in huo_ling_dic.items():
            location = sub_dic.get(self.pan_time.sdz)
            self.gongs.get(location).append_start(dou_shu_stars.get(star))
            self.append_start(location, star)

        # 安月系诸星
        zuo_fu_loaction = ""
        you_bi_loaction = ""
        yue_xi_dic = yue_xing_biao.get(self.pan_time.yue)
        for star, location in yue_xi_dic.items():
            self.gongs.get(location).append_start(dou_shu_stars.get(star))
            self.append_start(location, star)
            if star == "左辅":
                zuo_fu_loaction = location
            if star == "右弼":
                you_bi_loaction = location

        star = "三台"
        location = CalculateLocation(zuo_fu_loaction, self.pan_time.ri, star_name=star).calculate()
        self.gongs.get(location).append_start(dou_shu_stars.get(star))
        self.append_start(location, star)
        star = "八座"
        location = CalculateLocation(you_bi_loaction, self.pan_time.ri, star_name=star).calculate()
        self.gongs.get(location).append_start(dou_shu_stars.get(star))
        self.append_start(location, star)

        # 安年干系诸星
        sub_dic = nian_gan_xing_biao.get(self.pan_time.ntg)
        for star, location in sub_dic.items():
            self.gongs.get(location).append_start(dou_shu_stars.get(star))
            self.append_start(location, star)

        # 安年支系诸星
        sub_dic = nian_zhi_xing_biao.get(self.pan_time.ndz)
        for star, location in sub_dic.items():
            self.gongs.get(location).append_start(dou_shu_stars.get(star))
            self.append_start(location, star)

        # 安天才，天寿
        t = Tian_Cai_Tian_Show_xing(yue=self.pan_time.yue, shi_zhi=self.pan_time.sdz, nian_zhi=self.pan_time.ndz)
        star = "天才"
        location = t.get_tian_cai_loaction()
        self.gongs.get(location).append_start(dou_shu_stars.get(star))
        self.append_start(location, star)
        star = "天寿"
        location = t.get_tian_show_loaction()
        self.gongs.get(location).append_start(dou_shu_stars.get(star))
        self.append_start(location, star)

        # 安博士二十星
        lu_cun_loaction = self.star_loaction.get("禄存")
        bo_shi_shi_er_xing = Bo_Shi_Shi_Er_Xing(lu_cun_loaction, f"{self.yin_yang}{self.gender}")
        for star in ["博士", "力士", "青龙", "小耗", "将军", "奏书", "飞廉", "喜神", "病符", "大耗", "伏兵", "官府"]:
            location = bo_shi_shi_er_xing.__getattribute__(star)
            self.gongs.get(location).append_start(dou_shu_stars.get(star))
            self.append_start(location, star)

        # 安长生十二星
        sub_dic = chang_sheng_shi_er_xing_biao.get(self.wu_xing_jv_name).get(f"{self.yin_yang}{self.gender}")
        for star, location in sub_dic.items():
            self.gongs.get(location).append_start(dou_shu_stars.get(star))
            self.append_start(location, star)

        # 安截路，空亡
        jielu = Jie_Kong_Xing(self.pan_time.ntg)
        self.gongs.get(jielu.截路).append_start(dou_shu_stars.get("截路"))
        self.append_start(jielu.截路, "截路")
        self.gongs.get(jielu.空亡).append_start(dou_shu_stars.get("空亡"))
        self.append_start(jielu.空亡, "空亡")

        # 安旬中
        location = Xun_Kong_Xing(self.pan_time.ntg, self.pan_time.ndz).旬空
        self.gongs.get(location).append_start(dou_shu_stars.get("旬空"))
        self.append_start(location, "旬空")

        # 安天伤天使
        t = Tian_Shang_Tian_Shi_Xing(self.ming_gong_location)
        star = "天伤"
        location = t.__getattribute__(star)
        self.gongs.get(location).append_start(dou_shu_stars.get(star))
        self.append_start(location, star)
        star = "天使"
        location = t.__getattribute__(star)
        self.gongs.get(location).append_start(dou_shu_stars.get(star))
        self.append_start(location, star)

        # 四化星,
        # TODO 先保存在盘上，排完之后再去找在哪个宫
        sub_dic = si_hua_xing_biao.get(self.pan_time.ntg)
        for hua_star, star in sub_dic.items():
            location = self.star_loaction.get(star)
            self.gongs.get(location).append_start(dou_shu_stars.get(hua_star)(star))

    def step3(self):
        da = Da_Liu_Nian(self.ming_gong_location, self.start_age, f"{self.yin_yang}{self.gender}")
        for zhi in di_zhi.values():
            self.gongs.get(zhi).set_da_xian(da.__getattribute__(zhi))

    def step4(self):
        # TODO 目前搞不清楚这些星是不是每年都会变，但是先按年支固定下来
        ndz = self.pan_time.ndz  # 流年地支
        yue = self.pan_time.yue
        shi_zhi = self.pan_time.sdz
        # 安流年将前诸星表
        sub_dic = Liu_Nian_Xing(ndz).get_jiang_xing()
        for star, location in sub_dic.items():
            self.gongs.get(location).append_start(dou_shu_stars.get(star))
            self.append_start(location, star)

        # 安流年岁前诸星表
        sub_dic = Liu_Nian_Xing(ndz).get_sui_jian_biao()
        for star, location in sub_dic.items():
            self.gongs.get(location).append_start(dou_shu_stars.get(star))
            self.append_start(location, star)

        # TODO 安流年斗君 ,因为暂时不清楚怎么搞这个斗君流年，所以先不添加到宫里，先放盘上保存
        doujun = Dou_jun(yue, shi_zhi)
        location = doujun.get_liu_nian_location(ndz)
        self.liu_nian_dou_jun = location


class RadioButton(CheckBox):
    def _do_press(self):
        if self.active:
            return
        super(RadioButton, self)._do_press()


class MingPanDate(BoxLayout):
    def __init__(self, **kwargs):
        super(MingPanDate, self).__init__(**kwargs)
        self.user_info = {}
        self.gender_radio = {}
        self.gender = "男"
        #self.user_info_dir = os.path.join(os.path.dirname(os.path.dirname(__file__)), "data", "user_info")
        self.user_info_dir = os.path.join(os.path.dirname(__file__), "data", "user_info")
        self.pai_pan = None  # 排盘委托方法
        root = BoxLayout(orientation="vertical")
        self.add_widget(root)
        gender_select = BoxLayout(orientation="horizontal")
        root.add_widget(gender_select)
        root.spacing = 10
        root.padding = 10
        root.add_widget(self.mk_item("姓名"))
        root.add_widget(self.mk_item("日历"))
        root.add_widget(self.mk_item("农历"))

        gl = Label(text="性别", size_hint_x=0.60)
        set_font(gl)
        gender_select.add_widget(gl)
        gender_select.add_widget(self.mk_gender_item("男"))
        gender_select.add_widget(self.mk_gender_item("女"))
        user_operation = BoxLayout(orientation="horizontal")
        user_operation.spacing = 20
        pai_pan_button = Button(text='排盘', on_release=self.start)
        bao_cun_button = Button(text='保存', on_release=self.save_user_info)
        da__kai_button = Button(text='历史', on_release=self.open_from_file)

        set_font(pai_pan_button, bao_cun_button, da__kai_button)
        pai_pan_button.color = (1, 1, 1, 1)
        bao_cun_button.color = (1, 1, 1, 1)
        da__kai_button.color = (1, 1, 1, 1)
        user_operation.add_widget(da__kai_button)
        user_operation.add_widget(bao_cun_button)
        user_operation.add_widget(pai_pan_button)
        root.add_widget(user_operation)

    def update_ming_pan_time(self, old):
        self.user_info.get("农历").text = old.user_info.get("农历").text
        self.user_info.get("日历").text = old.user_info.get("日历").text
        self.pai_pan = old.pai_pan
        self.gender = old.gender
        self.gender_radio.get(old.gender).active = True
        self.user_info = old.user_info

    def mk_gender_item(self, gender="男"):
        root = BoxLayout(orientation="horizontal")
        root.spacing = 10
        root.padding = 10
        g = RadioButton(group='gender')
        if gender == "男":
            g.active = True
        gl = Label(text=gender)
        set_font(g, gl)
        root.add_widget(gl)
        root.add_widget(g)
        self.gender_radio[gender] = g

        return root

    def mk_item(self, item_type="日历"):
        root = BoxLayout(orientation="horizontal")
        label = Label(text=f"{item_type}:", size_hint_x=0.35)
        input = TextInput(hint_text="1998-01-31-06")
        if item_type == "姓名":
            input = TextInput(hint_text="姓名", text="匿名")
        set_font(label, input)
        root.add_widget(label)
        root.add_widget(input)
        self.user_info[item_type] = input
        return root

    def get_ri_li_pan_time(self):
        s = self.user_info.get("日历").text.strip()
        self.user_info.get("农历").text = ""
        try:
            ss = s.split("-")
            y = int(ss[0])
            m = int(ss[1])
            d = int(ss[2])
            shi = int(ss[3])
            y, m, d = PanTime.solar_to_lunar(y, m, d)
            # print(y, m, d, shi)
            pt = PanTime(y, m, d, shi)
            self.user_info.get("农历").text = (f"{y}-{m}-{d}-{shi}")
            return pt
        except Exception as E:
            self.date_error(str(E))
            self.user_info.get("日历").text = ""
            return None

        # if len(s) >= 13:
        #     try:
        #         ss = s.split("-")
        #         y = int(ss[0])
        #         m = int(ss[1])
        #         d = int(ss[2])
        #         shi = int(ss[3])
        #         y, m, d = PanTime.solar_to_lunar(y, m, d)
        #         print(y, m, d, shi)
        #         pt = PanTime(y, m, d, shi)
        #         self.user_info.get("农历").text = (f"{y}-{m}-{d}-{shi}")
        #         return pt
        #     except Exception as E:
        #         self.date_error(str(E))
        #         return None
        #
        # else:
        #
        #     return None

    def get_nong_li_pan_time(self):
        s = self.user_info.get("农历").text.strip()
        self.user_info.get("日历").text = ""
        try:
            ss = s.split("-")
            y = int(ss[0])
            m = int(ss[1])
            d = int(ss[2])
            shi = int(ss[3])
            # print(y, m, d, shi)
            pt = PanTime(y, m, d, shi)
            y, m, d = pt.lunar_to_solar()
            self.user_info.get("日历").text = (f"{y}-{m}-{d}-{shi}")
            return pt
        except Exception as E:
            self.date_error(str(E))
            self.user_info.get("农历").text = ""
            return None

        # if len(s) >= 13:
        #     try:
        #         ss = s.split("-")
        #         y = int(ss[0])
        #         m = int(ss[1])
        #         d = int(ss[2])
        #         shi = int(ss[3])
        #         print(y, m, d, shi)
        #         pt = PanTime(y, m, d, shi)
        #         y, m, d = pt.lunar_to_solar()
        #         self.user_info.get("日历").text = (f"{y}-{m}-{d}-{shi}")
        #         return pt
        #     except Exception as E:
        #         self.date_error(str(E))
        #         return None
        # else:
        #
        #     return None

    def date_error(self, error=None):
        title = '你的输入有误，请检查 ' if error is None else error
        contex = BoxLayout(orientation="vertical")
        label = Label(text=title)
        button = Button(text='确定', size_hint_y=0.2, on_release=lambda button: popup.dismiss())
        contex.add_widget(label)
        contex.add_widget(button)
        popup = Popup(title="error",
                      content=contex,
                      size_hint=(None, None),
                      size=(400, 400)

                      )

        set_font(button, label, contex, popup)
        label.color = (1, 1, 1, 1)
        button.color = (1, 1, 1, 1)
        popup.open()

    def start(self, button, *args, **kwargs):
        if self.pai_pan is None:
            self.date_error("尚未传递排盘方法")
            return

        if self.gender_radio.get("女").active:
            self.gender = "女"
        else:
            self.gender = "男"

        if not self.user_info.get("农历").text == "":
            ming_pan_time = self.get_nong_li_pan_time()
        else:
            ming_pan_time = self.get_ri_li_pan_time()

        if not ming_pan_time is None:
            p = Pan(ming_pan_time, self.gender)
            self.pai_pan(p)
        else:
            return

    def save_user_info(self, button, *args, **kwargs):

        if self.user_info.get("农历").text.strip() == "":
            self.date_error("尚未排盘或农历生日有误")
            return

        if self.user_info.get("姓名").text.strip() == "":
            self.date_error("尚未输入姓名")
            return

        if self.gender_radio.get("女").active:
            self.gender = "女"
        else:
            self.gender = "男"

        save_info = {
            "name": self.user_info.get("姓名").text,
            "gender": self.gender,
            "nong_li_time": self.user_info.get("农历").text,
        }
        now = datetime.datetime.now()

        # 生成文件名称
        filename = os.path.join(self.user_info_dir,
                                f"{save_info.get('name')}_{now.year}_{now.month}_{now.day}_{now.hour}_{now.minute}.json")
        if not os.path.exists(os.path.dirname(filename)):
            os.makedirs(os.path.dirname(filename))
        # 保存字典对象
        with open(filename, 'w') as f:
            json.dump(save_info, f)

    def open_from_file(self, button, *args, **kwargs):

        def update_self(file):
            if not file is None:
                with open(file, 'r') as f:
                    user_info = json.load(f)
                    self.gender = user_info.get("gender")
                    self.gender_radio.get(self.gender).active = True
                    self.user_info.get("农历").text = user_info.get("nong_li_time")
                    self.user_info.get("日历").text = ""
                    self.user_info.get("姓名").text = user_info.get("name")

        FileChooserPopup("", update_self, self.user_info_dir).open()

class PhoneApp(App):

    def build(self):

        app = AppScreen()
        return app


app = PhoneApp()
app.title = "天纪-紫薇斗数 v1.0  --测试版本"
app.run()
